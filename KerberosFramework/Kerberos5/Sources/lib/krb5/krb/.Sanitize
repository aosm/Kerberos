# Sanitize.in for Kerberos V5

# Each directory to survive it's way into a release will need a file
# like this one called "./.Sanitize".  All keyword lines must exist,
# and must exist in the order specified by this file.  Each directory
# in the tree will be processed, top down, in the following order.

# Hash started lines like this one are comments and will be deleted
# before anything else is done.  Blank lines will also be squashed
# out.

# The lines between the "Do-first:" line and the "Things-to-keep:"
# line are executed as a /bin/sh shell script before anything else is
# done in this 

Do-first:

# All files listed between the "Things-to-keep:" line and the
# "Files-to-sed:" line will be kept.  All other files will be removed.
# Directories listed in this section will have their own Sanitize
# called.  Directories not listed will be removed in their entirety
# with rm -rf.

Things-to-keep:

.cvsignore
ChangeLog
Makefile.in
addr_comp.c
addr_order.c
addr_srch.c
auth_con.c
auth_con.h
bld_pr_ext.c
bld_princ.c
chk_trans.c
cleanup.h
configure
configure.in
conv_creds.c
conv_princ.c
copy_addrs.c
copy_athctr.c
copy_auth.c
copy_cksum.c
copy_creds.c
copy_data.c
copy_key.c
copy_princ.c
copy_tick.c
cp_key_cnt.c
decode_kdc.c
decrypt_tk.c
encode_kdc.c
encrypt_tk.c
free_rtree.c
fwd_tgt.c
gc_frm_kdc.c
gc_via_tkt.c
gen_seqnum.c
gen_subkey.c
get_creds.c
get_in_tkt.c
in_tkt_sky.c
init_ctx.c
int-proto.h
kdc_rep_dc.c
mk_cred.c
mk_error.c
mk_priv.c
mk_rep.c
mk_req.c
mk_req_ext.c
mk_safe.c
parse.c
pr_to_salt.c
preauth.c
princ_comp.c
rd_cred.c
rd_error.c
rd_priv.c
rd_rep.c
rd_req.c
rd_req_dec.c
rd_safe.c
recvauth.c
send_tgs.c
sendauth.c
ser_actx.c
ser_addr.c
ser_adata.c
ser_auth.c
ser_cksum.c
ser_ctx.c
ser_eblk.c
ser_key.c
ser_princ.c
serialize.c
srv_rcache.c
str_conv.c
t_walk_rtree.c
t_kerb.c
t_krb5.conf
t_ref_kerb.out
t_ser.c
tgtname.c
unparse.c
v4lifetime.c
valid_times.c
walk_rtree.c

Things-to-lose:

Do-last:

# End of file.
