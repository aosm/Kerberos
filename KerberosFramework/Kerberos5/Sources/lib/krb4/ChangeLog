2004-12-08  Ken Raeburn  <raeburn@mit.edu>

	* RealmsConfig-glue.c (krb_get_krbhst): Check if DNS should be
	used for getting KDC names before actually using it.

2004-07-16  Ken Raeburn  <raeburn@mit.edu>

	* macsock.c: Deleted.

2004-07-15  Alexandra Ellwood  <lxs@mit.edu>

	* CCache-glue.c (krb_get_cred) 
        Removed default principal tracking.

2004-07-14  Ken Raeburn  <raeburn@mit.edu>

	* recvauth.c (krb_recvauth): Initialize cp and tmp_buf.  Check
	length of data read before evaluating the value.

2004-06-22  Ken Raeburn  <raeburn@mit.edu>

	* g_pw_in_tkt.c (passwd_to_key): Don't test macintosh.
	* kadm_net.c (SIGNAL): Don't test macintosh.

2004-06-16  Ken Raeburn  <raeburn@mit.edu>

	* Makefile.in (check-mac): Target deleted.

2004-06-04  Ken Raeburn  <raeburn@mit.edu>

	* Makefile.in (LIBBASE): Renamed from LIB.

2004-04-22  Ken Raeburn  <raeburn@mit.edu>

	* libkrb4.exports: New file.

2004-02-26  Jeffrey Altman <jaltman@mit.edu>

    * send_to_kdc.c: modify call to internals.sendto_udp to support
      the new declaration which contains an additional output parameter
      which will not be used.

2004-02-24  Sam Hartman  <hartmans@avalanche-breakdown.mit.edu>

	* rd_svc_key.c (krb54_get_service_keyblock): Remove ENCTYPE_LOCAL_DES3_HMAC_SHA1

2003-12-11  Sam Hartman  <hartmans@mit.edu>

	* rd_req.c (krb_rd_req_with_key): Note that the expiration difference between krb5 and krb4 is important

2003-08-15  Alexandra Ellwood  <lxs@mit.edu>

        * mk_auth.c: krb_check_auth clears the return value for the 
        schedule parameter with a memset.  This prevents callers 
        from using the key schedule, which breaks code.

2003-08-06  Alexandra Ellwood  <lxs@mit.edu>

        * configure.in: Don't assume all darwin boxes are powerpc.
        (eg: OpenDarwin/x86).

2003-07-11  Alexandra Ellwood  <lxs@mit.edu>

        * RealmsConfig-glue.c: Check for NULL realm argument and n
        not equal to 1.  Fill in realm with an empty string on error 
        in case the caller doesn't check the return value.

2003-07-11  Alexandra Ellwood  <lxs@mit.edu>

        * RealmsConfig-glue.c: Don't fail when krb5.conf is valid
        and krb.conf isn't.  Also, don't assert v4 realm is in profile
        unless that realm is a valid v4 realm.

2003-07-10  Alexandra Ellwood  <lxs@mit.edu>

        * RealmsConfig-glue.c: krb_get_lrealm fix so that if there is no
        "v4_realm" tag, krb_get_lrealm doesn't just always return
        ATHENA.MIT.EDU even though a different realm is specified in
        krb5.conf and there is a [v4 realm] config

2003-07-07  Alexandra Ellwood  <lxs@mit.edu>

        * RealmsConfig-glue.c: krb_prof_get_nth() no longer assumes that
        its retlen argument is correct (call strcpy instead of strncpy)
        because this argument is a guess for some callers 
        (eg: krb_get_admhst())

2003-06-11  Tom Yu  <tlyu@mit.edu>

	* Makefile.in (KRB_ERR_C): New variable; Darwin needs err_txt.o to
	have a dependency on krb_err.c so that krb_err.c will be generated
	first.

	* configure.in: Set KRB_ERR_C to krb_err.c on Darwin.

2003-06-09  Ken Raeburn  <raeburn@mit.edu>

	* RealmsConfig-glue.c (krb_get_krbhst): Don't fall back to DNS if
	entries were found in krb.conf, and just not enough to fill the
	request.

2003-06-06  Ken Raeburn  <raeburn@mit.edu>

	* RealmsConfig-glue.c: Include k5-int.h.
	(dnscache): New variable.
	(DNS_CACHE_TIMEOUT): New macro.
	(krb_get_krbhst) [KRB5_DNS_LOOKUP]: If no krb.conf info is found,
	try DNS SRV records for "kerberos-iv".  Cache results in case
	they're immediately requested again.

2003-06-06  Tom Yu  <tlyu@mit.edu>

	* g_cnffile.c (krb__get_srvtabname): Make retname be a static
	array rather than a static pointer, to avoid callers' possible
	retention of free()d pointers.  Yes, this may cause difficulty
	with making this function thread-safe.

2003-06-04  Tom Yu  <tlyu@mit.edu>

	* password_to_key.c (mit_passwd_to_key, afs_passwd_to_key): Delete
	spurious space from prompt.

2003-06-03  Ken Raeburn  <raeburn@mit.edu>

	* RealmsConfig-glue.c (get_krbhst_default): Deleted.
	(krb_get_krbhst): Don't call it.

2003-06-03  Sam Hartman  <hartmans@mit.edu>

	* g_pw_in_tkt.c (passwd_to_key): Fix password prompt

	* password_to_key.c (mit_passwd_to_key): Fix password prompt
	(afs_passwd_to_key): Fix password prompt

	* g_in_tkt.c (krb_get_in_tkt_preauth_creds): Keep copy of
	ciphertext while trying different keyprocs 

2003-06-02  Tom Yu  <tlyu@mit.edu>

	* change_password.c (krb_change_password): Explicitly zero the
	session key.  Zero the key derived from the new password.

	* mk_req.c (krb_mk_req): Explicitly zero the session key.
	(krb_mk_req_creds_prealm): Don't zero the session key, in case the
	caller wants to make use of it.

2003-05-24  Ken Raeburn  <raeburn@mit.edu>

	* lifetime.c (krb_life_to_time, krb_time_to_life): Rewrite to use
	support functions in the krb5 library via krb5int_accessor.  Moved
	old implementation into krb5 library.

2003-05-12  Tom Yu  <tlyu@mit.edu>

	* Makefile.in: Add setting of KRB_ERR on Windows.

2003-05-11  Sam Hartman  <hartmans@mit.edu>

	* Makefile.in: Build krb_err.c when appropriate.

	* configure.in: Set KRB_ERR to be the object file generated by
	krb_err.c on non-Darwin

	* err_txt.c :  Don't include krb_err.c on non-Darwin UNIX.  Doing
	so may break with some compile_et implementations.  Also not
	included on Windows.

2003-05-01  Alexandra Ellwood  <lxs@mit.edu>
   
    * kadm_stream.c: Fixed vts_long() and vts_short() so they return a
    pointer to the beginning of the memory they allocate and place 
    their data at the end of the buffer which was passed in.

2003-04-14  Alexandra Ellwood  <lxs@mit.edu>
    
    * g_ad_tkt.c: Added support for login library to get_ad_tkt.
    Support is copied from Mac Kerberos4 library and conditionalized
    for USE_LOGIN_LIBRARY to avoid changing get_ad_tkt's behavior for
    non-Kerberos Login Library builds.

2003-03-06  Alexandra Ellwood  <lxs@mit.edu>

    * CCache-glue.c: Added prototypes for deprecated functions.
    Made internal functions static.  Removed unused CoreServices
    include.  Changed TICKET_GRANTING_TICKET to new macro:
    KRB_TICKET_GRANTING_TICKET.
    
    * change_password.c: Added check of inputs to krb_change_password
    so we don't crash on bad inputs.  Call des_string_to_key not
    mit_password_to_key on all platforms because we don't want to 
    prompt for a password.
    
    * FSp-glue.c: Added prototypes for deprecated functions.  Changed to
    use KfM's FSSpecToPOSIXPath which correctly handles FSSpecs where
    the file does not exist.
    
    * g_in_tkt.c: Added explanatory comments.  Made TARGET_OS_MAC sections
    a little smaller and easier to read.
    
    * g_pw_in_tkt.c: Only prompt when we are not using the login library.
    This is so that Darwin builds do prompt but KfM builds don't.
    
    * g_svc_in_tkt.c, g_tkt_svc.c: Changed to use KRB_TICKET_GRANTING_TICKET.
    
    * kadm_net.c:  Use autoconf variable krb5_sigtype instead of sigtype, 
    which doesn't seem to be defined on Mac OS X.

    * krb4int.h, RealmsConfig-glue.c: Removed krb_get_stk().
    
    * rd_req.c: Added #ifdef KRB4_USE_KEYTAB to avoid unused variable warning
    when KRB4_USE_KEYTAB is not defined.
    
    * sendauth.c: Fixed warnings with casts. 

2003-03-04  Ken Raeburn  <raeburn@mit.edu>

	* password_to_key.c (mit_passwd_to_key, afs_passwd_to_key):
	Comment out pragmas not recognized by gcc or cl.

	* gethostname.c, getst.c, kadm_net.c, klog.c, kparse.c: Include
	krb5/autoconf.h.
	* kuserok.c, log.c, memcache.c, mk_preauth.c, netread.c: Ditto.
	* netwrite.c, put_svc_key.c, recvauth.c, send_to_kdc.c: Ditto.
	* tkt_string.c: Ditto.
	* Makefile.in: Update dependencies.
	(DEFINES): Define KRB4_USE_KEYTAB.
	* configure.in: Don't define KRB4_USE_KEYTAB.  Don't check for any
	headers or functions; include/configure.in already does it.  Don't
	invoke AC_C_CONST explicitly; CONFIG_RULES does that.

2003-03-03  Tom Yu  <tlyu@mit.edu>

	* g_cnffile.c (krb__get_srvtabname): Keep strdup()ed string in a
	static variable and free it called again; this prevents a memory
	leak.

2003-02-28  Ezra Peisach  <epeisach@bu.edu>

	* Makefile.in (clean-unix): Remove krb_err_txt.c on clean. Update
	dependencies

	* g_pw_in_tkt.c: Include krb4int.h for krb_get_keyprocs() prototype.

2003-02-25  Ken Raeburn  <raeburn@mit.edu>

	* in_tkt.c: Include k5-util.h.
	(do_seteuid): Define as krb5_seteuid instead of testing system
	characteristics here.
	* dest_tkt.c: Likewise.

	* change_password.c (krb_change_password): Use int, not KRB_INT32,
	for krb4 error codes.  Check for malloc failure allocating
	sendStream.

2003-02-12  Tom Yu  <tlyu@mit.edu>

	* Makefile.in: Update dependencies.
	(KRB_ERR_TXT): Set by configure to be either empty
	(on Darwin) or krb_err_txt.c (on other platforms).  This avoids
	building krb_err_txt.c on Darwin, as the type of krb_err_txt is a
	pointer there, so we don't need another copy of the array.
	(DEFINES): Remove.  It wasn't doing anything useful and was
	cluttering up the compile command line.

	* configure.in: On Darwin, don't use krb_err_txt.c.

	* err_txt.c: On Darwin, actually use the array generated by
	compile_et, and assign it to krb_err_txt, which is a pointer, not
	an array, on that platform.

2003-02-11  Tom Yu  <tlyu@mit.edu>

	* CCache-glue.c: Delete in_tkt().

	* change_password.c: Fix incorrect filename in comment.

	* g_in_tkt.c (krb_get_in_tkt_preauth): Call krb_in_tkt() rather
	than in_tkt().

	* CCache-glue.c (krb_in_tkt): Rename from in_tkt().
	(in_tkt): Implement in terms of krb_in_tkt() to match existing
	Unix and Windows API.  This shouldn't be a problem because it
	appears to be considered an internal API on Mac.

2003-02-10  Tom Yu  <tlyu@mit.edu>

	* password_to_key.c (krb5_passwd_to_key): Replace snprintf() call
	with explicit length checking.

	* memcache.c (krb4int_save_credentials_addr): Renamed from
	krb_save_credentials().
	(krb_save_credentials): Implement in terms of
	krb4int_save_credentials_addr().

	* password_to_key.c (mit_passwd_to_key, krb5_passwd_to_key) 
	(afs_passwd_to_key): Fix to have KRB5_CALLCONV.

	* krb4int.h (mit_passwd_to_key, krb5_passwd_to_key):
	(afs_passwd_to_key): Fix prototypes to have KRB5_CALLCONV.

	* CCache-glue.c (krb4int_save_credentials_addr): Renamed from
	krb_save_credentials().
	(krb_save_credentials): Implement in terms of
	krb4int_save_credentials_addr().

	* Makefile.in (SRCS, OBJS): Add password_to_key.

	* g_ad_tkt.c (get_ad_tkt): Call krb4int_send_to_kdc_addr() instead
	of send_to_kdc().  Call krb4int_save_credentials_addr() instead of
	krb_save_credentials().  These changes deal with Mac-specific
	storage of the local address without introducing more
	conditionally compiled code.

	* g_in_tkt.c: Fix to minimize Mac-specific code.  Basically, pass
	around local address in lots of places.  There is still a
	Mac-specific difference involving krb_get_in_tkt_creds().

	* krb4int.h: Include port-sockets.h to get some socket stuff for
	some prototypes.  Update prototype for
	krb_get_in_tkt_preauth_creds().  Add prototypes for
	krb4int_save_credentials_addr() and krb4int_send_to_kdc_addr().

	* password_to_key.c (krb_get_keyprocs): Fix typo.
	(mit_passwd_to_key, krb5_passwd_to_key): mit_string_to_key ->
	des_string_to_key.

	* save_creds.c (krb_save_credentials): Re-implement in terms of
	krb4itn_save_credentials_addr(), which is what library internals
	will call.
	(krb4int_save_credentials_addr): Renamed from
	krb_save_credentials.

	* tkt_string.c (krb_set_tkt_string): Fix to take const char *.

2003-02-10  Alexandra Ellwood <lxs@mit.edu>
    Note: these checkins are partial progress for Tom Yu.
    They probably don't build; Tom is expecting that.

    * CCache-glue.c: Removed copying of the string_to_key type in
    krb_save_credentials.  Saving the string_to_key type is unnecessary
    and was just for display purposes.  Will be removed for KfM 5.0.
    Updated to use KRB5_CALLCONV instead of INTERFACE and include the
    krb5's krb4 headers instead of the KfM ones.

    * change-password.c: Removed include of CredentialsCache.h and
    code that switches between string to key types.  This doesn't make
    sense for password changing because the krb4 protocol for password
    changing implemented here only supports mit's string to key.  Bug 
    was in KfM and got ported forward.  Should the code call 
    mit_password_to_key for all platforms?  
    
    * FSp-glue.c: Removed dependency on MoreFiles and replaced it with
    code to use FSRefs now that we are Carbon-only.
    
    * g_in_tkt.c: Added loop which calls password to key functions 
    trying each one.  This technique was imported from KTH-KRB into 
    KfM.  This code still needs to have the TARGET_OS_MAC code made more
    Unix friendly for Darwin builds.  The behavior differences (store
    the address or not) should be deferred until the very last moment to
    avoid excessive #ifdefs.

    * g_pw_in_tkt.c: Added loop which calls password to key functions 
    trying each one.  This technique was imported from KTH-KRB into KfM.
    
    * krb4int.h: Added password-to-key.c functions so they can be used by
    g_in_tkt.c and g_pw_in_tkt.c.
    
    * password-to-key.c: Removed dependence on the CCAPI so this code can
    be used on all platforms to implement looping over the password to
    key functions.
    
    * RealmsConfig-glue.c: Changed to use #ifdef USE_CCAPI like is used 
    elsewhere in the krb5 sources.  This is just for consistency in krb5.

2003-02-07  Tom Yu  <tlyu@mit.edu>

	* Makefile.in: Add rules to generate krb_err_txt.c.

	* err_txt.c: Include two copies of the error table, one generated
	by com_err, and one generated by a special-purpose awk script.

	* et_errtxt.awk: New file; used to generate krb_err_txt.c

2003-02-04  Tom Yu  <tlyu@mit.edu>

	* decomp_tkt.c (dcmp_tkt_int): Patch from Booker Bense to use
	krb_get_lrealm() instead of copying KRB_REALM into prealm.

2003-01-28  Ken Raeburn  <raeburn@mit.edu>

	* RealmsConfig-glue.c (get_krbhst_default, krb_get_krbhst):
	(krb_realmofhost): Use strcpy instead of strncpy.

2003-01-27  Ken Raeburn  <raeburn@mit.edu>

	* RealmsConfig-glue.c (krb_get_admhst): Use strcpy instead of
	strncpy, and max length of MAX_HSTNM.

2003-01-15  Ken Raeburn  <raeburn@mit.edu>

	* sendauth.c (krb_net_rd_sendauth): Arg raw_len now points to
	KRB4_32; don't cast it to pointer to unsigned long.  Change ld.so
	warning message check to be byte-order independent.
	* krb4int.h (krb_net_rd_sendauth): Decl updated.

2003-01-15  Tom Yu  <tlyu@mit.edu>

	* CCache-glue.c: New file from KfM.

2003-01-10  Ken Raeburn  <raeburn@mit.edu>

	* configure.in: Don't explicitly invoke AC_PROG_ARCHIVE,
	AC_PROG_ARCHIVE_ADD, AC_PROG_RANLIB, AC_PROG_INSTALL.

	* Makefile.in: Add AC_SUBST_FILE marker for lib_frag and libobj_frag.

2003-01-05  Sam Hartman  <hartmans@mit.edu>

	* tf_util.c: Remove declaration of errno

	* dest_tkt.c (dest_tkt): Remove declaration of errno

2002-12-18  Tom Yu  <tlyu@mit.edu>

	* RealmsConfig-glue.c: Fix up KRB5_CALLCONV.

	* win_store.c (krb__get_srvtabname): Add const to parameter.

2002-12-16  Tom Yu  <tlyu@mit.edu>

	* tkt_string.c (krb5_set_tkt_string): Add KRB5_CALLCONV.

	* win_glue.c (krb_set_tkt_string): Add KRB5_CALLCONV.

2002-12-13  Tom Yu  <tlyu@mit.edu>

	* ad_print.c, g_in_tkt.c, g_pw_in_tkt.c, kadm_net.c, klog.c:
	* kuserok.c, log.c, memcache.c, netread.c, netwrite.c:
	* password_to_key.c, recvauth.c, stime.c, tkt_string.c: 
	Change _WINDOWS to _WIN32 in many places.  Update copyright
	notices.  Remove _WINDOWS handling completely in a few places
	where it's not needed.

2002-12-12  Tom Yu  <tlyu@mit.edu>

	* FSp-glue.c: Extracted and ported from various files from KfM.
	Not built on Unix.

	* Makefile.in: Removed srcdir references from various SRCS
	variables.  Stop building krb_err.o because of gross hack in
	err_txt.c.  Adjust some dependency generation things.
	(REALMDBOBJS): Use RealmsConfig-glue instead of lots of other
	files.
	(LOCALINCLUDES): Use current directory, so we can pick up
	krb_err.c as an include file.

	* RealmsConfig-glue.c: Ported from KfM and cleaned up.  Old
	REALMDBSRCS inlined here too.

	* g_admhst.c, g_in_tkt.c, g_krbhst.c, g_krbrlm.c, realmofhost.c:
	Removed.  Functionality is now in RealmsConfig-glue.c.

	* g_in_tkt.c (krb_get_in_tkt_creds): Add KRB5_CALLCONV.

	* dest_tkt.c (dest_tkt): TKT_FILE now assigned to a const char *,
	due to change in tkt_string() return type.

	* err_txt.c: Much grossness.  Suck in krb_err.c here, so we can
	use the static array to initialize the krb_err_txt array.

	* g_in_tkt.c: Call krb4int_send_to_kdc_addr() on MacOS.

	* g_svc_in_tkt.c: Fix up copyright notice; punt gratuitous
	definition of NULL.

	* g_tf_fname.c (krb_get_tf_fullname): Takes a const char * for
	ticket file name now, due to change in tkt_string() return type.

	* g_tf_realm.c (krb_get_tf_realm): Takes a const char * for ticket
	file name now, due to change in tkt_string() return type.

	* in_tkt.c: Include errno.h.
	(in_tkt): TKT_FILE now assigned to a const char *, due to change
	in tkt_string() return type.

	* krb4int.h: Add prototype for krb_get_in_tkt_preauth_creds().
	Fix _WINDOWS->_WIN32.

	* krb_err.et: Sync somewhat with old contents of err_txt.c.

	* tf_util.c (tf_init): Takes const char *tf_name now.

2002-12-06  Tom Yu  <tlyu@mit.edu>

	* g_ad_tkt.c (get_ad_tkt): Add KRB5_CALLCONV.

	* g_in_tkt.c (krb_get_in_tkt_preauth): Add KRB5_CALLCONV.
	(krb_get_in_tkt): Add KRB5_CALLCONV.

	* send_to_kdc.c (krb4int_send_to_kdc_addr): New function; does
	what send_to_kdc() used to do but can also return local address.

2002-12-05  Tom Yu  <tlyu@mit.edu>

	* kname_parse.c (kname_unparse): Add new function ported from
	KfM, including support functions.

	* decomp_tkt.c (decomp_ticket): Add KRB5_CALLCONV.

2002-12-04  Tom Yu  <tlyu@mit.edu>

	* krb4int.h: Remove now conflicting prototype for
	krb_set_lifetime().

	* Makefile.in: Fix up includes handling somewhat.

2002-12-02  Tom Yu  <tlyu@mit.edu>

	* change_password.c: Remove netdb.h inclusion.

2002-11-27  Tom Yu  <tlyu@mit.edu>

	* Makefile.in (SRCS): Add kadm_err.c.  It was missing.

2002-11-26  Tom Yu  <tlyu@mit.edu>

	* Makefile.in (OBJS, SRCS): Add change_password.c, kadm_err.c,
	kadm_net.c, kadm_stream.c.  Remove one.c.
	Also, add com_err support for kadm_err.et.  Update dependencies.

	* change_password.c: New file.

	* configure.in: Remove checks for BITS16, BITS32, MSBFIRST, and
	LSBFIRST.

	* g_in_tkt.c (krb_mk_in_tkt_preauth): Update to optionally return
	local address --  not yet fully implemented.
	(krb_parse_in_tkt_creds): Renamed from krb_parse_in_tkt().  Now
	fills in a CREDENTIALS instead of storing into a ticket file.
	(krb_get_in_tkt_preauth_creds): Renamed from
	krb_get_in_tkt_preauth().  Now fills in a CREDENTIALS instead of
	storing into a ticket file.
	(krb_get_in_tkt_creds): Port from KfM.
	(krb_get_in_tkt_preauth): Reimplement in terms of
	krb_get_in_tkt_creds_preauth().

	* g_pw_in_tkt.c (krb_get_pw_in_tkt_creds): Port from KfM.

	* kadm_err.et:
	* kadm_net.c:
	* kadm_stream.c: New files to implement password changing, ported
	from KfM.

	* mk_req.c (krb_mk_req_creds_prealm): New internal function --
	similar to krb_mk_req_creds() but takes the client's realm, since
	it's needed for forming a correct request but is not present in a
	CREDENTIALS.
	(krb_mk_req): Reimplement in terms of krb_mk_req_creds_prealm().
	Move the logic for acquiring credentials and determining client's
	realm here.
	(krb_mk_req_creds): Port from KfM.
	(krb_set_lifetime): Make KRB5_CALLCONV now.

	* one.c: Remove.

	* password_to_key.c: New file, ported from KfM.  Will eventually
	implement some string-to-key stuff.

	* prot_client.c: Eliminate references to {LSB,MSB}_FIRST.

	* prot_kdc.c: Eliminate references to {LSB,MSB}_FIRST.

	* rd_req.c (krb_rd_req_with_key): New internal function -- can
	take a key schedule or a krb5_keyblock and use one of those to
	decrypt the ticket.
	(krb_rd_req_int): Ported from KfM.  Calls into
	krb_rd_req_with_key().
	(krb_rd_req): Reimplement in terms of krb_rd_req_with_key().  Copy
	some of the realm and kvno reading logic here.

	* tkt_string.c: Returns pointer to const now.

2002-08-29  Ken Raeburn  <raeburn@mit.edu>

	* Makefile.in: Revert $(S)=>/ change, for Windows support.

2002-08-23  Ken Raeburn  <raeburn@mit.edu>

	* Makefile.in: Change $(S)=>/ and $(U)=>.. globally.

2002-08-07  Ken Raeburn  <raeburn@mit.edu>

	* cr_tkt.c (krb_cr_tkt_int): Don't take key arguments any more.
	(krb_create_ticket, krb_cr_tkt_krb5): Do the encryption here; drop
	NOENCRYPTION test.

2002-07-30  Ken Raeburn  <raeburn@mit.edu>

	* log.c: Include stdarg.h.
	(krb_log): Use va_ macros and vfprintf instead of a bunch of
	pointer arguments.
	* krb4int.h (krb_log): Declaration updated.

2002-07-12  Ken Raeburn  <raeburn@mit.edu>

	* ad_print.c, g_phost.c, g_tkt_svc.c, gethostname.c, mac_glue.c,
	mac_stubs.c, mac_time.c, mk_auth.c, mk_priv.c, mk_req.c,
	mk_safe.c, netread.c, netwrite.c, rd_priv.c, rd_safe.c,
	realmofhost.c, recvauth.c, send_to_kdc.c, sendauth.c, stime.c,
	win_glue.c: Don't define DEFINE_SOCKADDR.

	* mac_time.c, stime.c: Don't define NEED_TIME_H; instead, include
	time.h and sys/time.h when _WINDOWS isn't defined, which is what
	krb.h used to do for NEED_TIME_H.

	* ad_print.c, cr_tkt.c, decomp_tkt.c, g_krbhst.c, g_phost.c,
	g_tkt_svc.c, mk_priv.c, mk_safe.c, netread.c, netwrite.c,
	prot_kdc.c, rd_priv.c, rd_safe.c, realmofhost.c, recvauth.c,
	send_to_kdc.c, sendauth.c, tkt_string.c: Include port-sockets.h.

2002-06-21  Ken Raeburn  <raeburn@mit.edu>

	* mk_priv.c (krb4int_address_less): Put braces around v4mapped
	address processing to permit local variable declaration.  Pass
	correct value to IN6_IS_ADDR_V4MAPPED.

2002-05-29  Ken Raeburn  <raeburn@mit.edu>

	* DNR.c: Deleted.

2002-03-11  Ken Raeburn  <raeburn@mit.edu>

	Handle IPv6 sockets that are used to communicate over IPv4, and
	permit use of non-IPv4 addresses if address checking is turned
	off:
	* mk_priv.c (krb4int_address_less): New function.  Compares IPv4
	addresses for ordering, but also handles the IPv6 v4-mapped form.
	(krb_mk_priv): Use krb4int_address_less.  Handle sender/receiver
	addresses that are IPv6 v4-mapped like IPv4 addresses, or store
	zero for other addresses.
	* mk_safe.c (krb_mk_safe): Use krb4int_address_less.  Handle
	sender/receiver addresses that are IPv6 v4-mapped like IPv4
	addresses, or store zero for other addresses.
	* rd_priv.c (krb_rd_priv): Use krb4int_address_less.  Deal with
	socket addresses that are v4-mapped IPv6 addresses.
	* rd_safe.c (krb_rd_safe): Use krb4int_address_less.  Deal with
	socket addresses that are v4-mapped IPv6 addresses.

2001-10-09  Ken Raeburn  <raeburn@mit.edu>

	* cr_tkt.c, decomp_tkt.c, g_in_tkt.c, tf_util.c: Make prototypes
	unconditional.

2001-10-03  Ken Raeburn  <raeburn@mit.edu>

	* dest_tkt.c, err_txt.c, g_admhst.c, g_cred.c, g_krbhst.c,
	g_krbrlm.c, g_phost.c, g_pw_in_tkt.c, g_pw_tkt.c, g_svc_in_tkt.c,
	g_tf_fname.c, g_tf_realm.c, g_tkt_svc.c, in_tkt.c, kname_parse.c,
	kuserok.c, lifetime.c, memcache.c, mk_auth.c, mk_err.c, mk_priv.c,
	mk_req.c, mk_safe.c, put_svc_key.c, rd_err.c, rd_priv.c, rd_req.c,
	rd_safe.c, rd_svc_key.c, realmofhost.c, recvauth.c, save_creds.c,
	send_to_kdc.c, sendauth.c, tf_util.c, unix_time.c, win_glue.c,
	win_store.c: Don't use KRB5_DLLIMP.  Don't explicitly declare
	pointers FAR any more.

2001-09-28  Ken Raeburn  <raeburn@mit.edu>

	* Makefile.in (LOCALINCLUDES): Renamed from DEFINES.  Add
	build-tree version of kerberosIV include directory.

2001-07-08  Ezra Peisach  <epeisach@mit.edu>

	* fgetst.c: Include krb4int.h.

	* krb4int.h: Add fgetst prototype.

2001-06-28  Ezra Peisach  <epeisach@mit.edu>

	* krb4int.h: Provide prototype for krb_get_default_user and
	krb_set_default_user if _WINDOWS is not defined. There is a
	conditional prototype in krb.h for them.

2001-06-27  Ezra Peisach  <epeisach@mit.edu>

	* krb4int.h: Add prototypes for ad_print, krb_svc_init,
	krb_svc_init_preauth, krb_get_svc_in_tkt_preauth, kset_logfile,
	krb_log, krb_set_logfile, krb_set_lifetime, month_sname,
	krb_rd_preauth, krb_net_rd_preauth, krb_net_rd_sendauth,
	krb_stime, krb_start_session, krb_end_session,
	krb_get_default_user, krb_set_default_user.

	* ad_print.c, g_svc_in_tkt.c, klog.c, log.c, mk_req.c,
 	month_sname.c, rd_preauth.c, sendauth.c, stime.c, unix_glue.c:
 	Include krb4int.h for prototypes.

	* decomp_tkt.c: Include krb54proto.h for decomp_tkt_krb5() prototype.

2001-06-26  Ezra Peisach  <epeisach@mit.edu>

	* krb4int.h: Add prototypes for krb__get_realmsfile(),
	krb5 prototypes are declarted from krb.hkrb__get_cnffile() and
	krb5 prototypes are declarted from krb.hk_gethostname(). 

	* g_pw_in_tkt.c: Declare passwd_to_key() static.

	* cr_tkt.c: Move krb5.h inclusion before krb.h so that certain
	krb5 prototypes are declarted from krb.h.

	* g_admhost.c, g_cnffile.c, g_krbhst.c, g_krbrlm.c, gethostname.c
	krb5 prototypes are declarted from krb.hrealmofhost.c: 
	Include krb4int.h and remove prototypes included in there.

2001-06-20  Ezra Peisach  <epeisach@mit.edu>

	* kname_parse.c (k_isrealm, k_isname, k_isrealm): Add
	KRB5_DLLIMP/KRB5_CALLCONV definitions for function with exported
	prototype in krb.h.

	* g_cnffile.c (krb__get_srvtabname, krb__v5_get_file): Declare
	argument as const.

	* g_svc_in_tkt.c, put_svc_key.c, rd_req.c, rd_svc_key.c: Get rid
	of krb__get_srvtabname() prototype - in krb.h now.


2001-06-18  Ezra Peisach  <epeisach@mit.edu>

	* kparse.c (strutol): Cast argument to isupper()/tolower() to int.
	* realmofhost.c (krb_realmofhost): Likewise.

2001-06-18  Ezra Peisach  <epeisach@mit.edu>

	* g_pw_in_tkt.c: Include krb5.h so that des_read_password()
	prototype is present in des.h. Cast argument to des_read_password.

	* getst.c, put_svc_key.c, rd_svc_key.c, save_creds.c, tf_util.c:
	Include krb4int.h for prototypes.

	* krb4int.h: New file containing private prototypes for krb4
	functions not used outside the library. Contains getst() and
	tf_save_cred().

2001-06-11  Ezra Peisach  <epeisach@mit.edu>

	* sendauth.c (krb_sendauth): Add KRB5_DLLIMP/KRB5_CALLCONV definitions
	for function with exported prototype in krb.h

2001-06-08  Ezra Peisach  <epeisach@mit.edu>

	* cr_tkt.c (krb_create_ticket): Get rid of last argument (k5key)
	which was added erroneously and is not how code is used in tree.

2001-06-08  Ezra Peisach  <epeisach@mit.edu>

	* ad_print.c (ad_print): Cast arguments to printf() to longs to
	match format string.

2001-06-01  Ezra Peisach  <epeisach@mit.edu>

	* g_krbrlm.c: Remove unused static variable krb_conf. 

	* g_svc_in_tkt.c (krb_svc_init, krb_svc_init_preauth): Declare as
	returning int.

	* gethostname.c: Include unistd.h for gethostname() prototype.

	* getst.c: Include unistd.h for read() prototype.

	* in_tkt.c (in_tkt): Cast arguments to debugging printf to int
	from uid_t to match format statement. 

	* kname_parse.c: Declare k_isname() and k_isinst() as returning
	int. Cleanup assigments in conditionals.

	* kuserok.c (kuserok): Cleanup assignment in conditional.

	* log.c (krb_set_logfile): Declare function as void. 
	* klog.c (kset_logfile): Likewise.

	* pkt_clen.c (pkt_clen): Declare as returning int.
	* kntoln.c (krb_kntoln): Likewise.
	* fgetst.c (fgetst): Likewise.

	* rd_req.c: Declare local variable only if KRB_CRYPT_DEBUG defined. 

	* recvauth.c: Include stdlib.h and unistd.h for read() and atoi()
	prototypes.

	* send_to_kdc.c: Include unistd.h for close() prototype.

	* sendauth.c (krb_sendauth): Clean up assignment in conditional.

	* tkt_string.c (tkt_string): Likewise

2001-04-13  Ken Raeburn  <raeburn@mit.edu>

	* Makefile.in (EHDRDIR): Install into kerberosIV subdirectory.

	* ad_print.c (ad_print): Pass address of session key to
	des_cblock_print_file, not the session key.

	* g_tkt_svc.c (CredIsExpired): Don't use a variable named "time".

2001-04-13  Danilo Almeida  <dalmeida@mit.edu>

	* memcache.h: Don't use macro PROTOTYPE.

2001-04-10  Ken Raeburn  <raeburn@mit.edu>

	* cr_err_repl.c (req_act_vno): Delete commented-out declaration.

	* kparse.c, send_to_kdc.c: Don't use macro PROTOTYPE.

2001-01-29  Tom Yu  <tlyu@mit.edu>

	* lifetime.c: Remove support for "magic" lifetime value of 255.

2001-01-26  Tom Yu  <tlyu@mit.edu>

	* dest_tkt.c: Clean up uid handling.  Fix stat checks.

	* in_tkt.c: Clean up uid handling.  Fix stat checks.

	* tf_util.c: Clean up uid handling.  Fix stat checks.

2001-01-25  Tom Yu  <tlyu@mit.edu>

	* Makefile.in (OBJS, SRCS): Add prot_client.o, prot_client.c.

	* prot_client.c: New file; client-side protocol support.

	* prot_common.c (krb4prot_decode_header): Decode the first two
	bytes of a krb4 packet.

2001-01-24  Tom Yu  <tlyu@mit.edu>

	* prot_common.c: Fix up some error returns.

	* prot_kdc.c: Fix up some error returns.  Add
	decode_kdc_request().

2001-01-23  Tom Yu  <tlyu@mit.edu>

	* prot_common.c: New file; contains functions to encode/decode
	string triples for principals.

	* prot_kdc.c: New file; contains encoders and decoders
	(eventually) for the KDC's use.

	* Makefile.in (OBJS, SRCS): Add prot_common.o, prot_kdc.o.

	* cr_auth_repl.c: KRB4_PUT{16,32} -> KRB4_PUT{16,32}BE.

	* cr_ciph.c: Include prot.h.  KRB4_PUT32 -> KRB4_PUT32BE.

	* cr_err_repl.c: KRB4_PUT32 -> KRB4_PUT32BE.

	* cr_tkt.c: KRB4_PUT32 -> KRB4_PUT32BE.

	* decomp_tkt.c: krb_strnlen -> krb4int_strnlen.

	* g_ad_tkt.c: krb_strnlen -> krb4int_strnlen.  KRB4_PUT32 ->
	KRB4_PUT32BE.  Properly skip date while parsing error.

	* g_in_tkt.c: krb_strnlen -> krb4int_strnlen.  KRB4_PUT32 ->
	KRB4_PUT32BE.  Properly skip date while parsing error.

	* g_phost.c: Changes from audit.  Actually bail out instead of
	failing silently if h->h_name is too long.

	* kname_parse.c: Changes from audit.  Check overrun per character
	processed.

	* mk_auth.c: krb_strnlen -> krb4int_strnlen.  KRB4_PUT32 ->
	KRB4_PUT32BE.  Include prot.h.

	* mk_err.c: KRB4_PUT32 -> KRB4_PUT32BE.

	* mk_priv.c: KRB4_PUT32 -> KRB4_PUT32BE.

	* mk_req.c: KRB4_PUT32 -> KRB4_PUT32BE.

	* mk_safe.c: KRB4_PUT32 -> KRB4_PUT32BE.

	* rd_req.c: krb_strnlen -> krb4int_strnlen.

	* strnlen.c: Rename to krb4int_strnlen.  Also include prot.h,
	which is where strnlen is declared now.

2001-01-18  Tom Yu  <tlyu@mit.edu>

	* g_ad_tkt.c: Fix error packet parsing.

	* g_in_tkt.c: Fix error packet parsing.  Also, declare some
	internal functions as static and add prototypes.

2000-11-09  Danilo Almeida  <dalmeida@mit.edu>

	* strnlen.c (krb_strnlen): Put The return type before the calling
	convention.

2000-11-08  Tom Yu  <tlyu@mit.edu>

	* Makefile.in (OBJS, SRCS): Add strnlen.o, strnlen.c.

	* cr_auth_repl.c: Audit.  Fix up copyright.  Use new KRB4_PUT*
	macros for encoding so output is always big-endian.  Precompute
	string lengths for better length-checking.

	* cr_ciph.c: Audit.  Fix up copyright.  Use new KRB4_PUT* macros
	for encoding so that output is always big-endian.  Precompute
	string lengths for better length-checking.  Zero out the key
	schedule after encrypting.

	* cr_death_pkt.c: Audit.  Fix up copyright.  Precompute string
	lengths for better length-checking.

	* cr_err_repl.c: Audit.  Fix up copyright.  Use moving pointer to
	do encoding.  Precompute string lengths for better
	length-checking.  Use KRB4_PUT* macros so that output is always
	big-endian.

	* cr_tkt.c: Audit.  Fix up copyright.  Use KRB4_PUT* macros for
	encoding so that output is always big-endian.  Zero out the key
	schedule after encrypting.

	* decomp_tkt.c: Audit.  Fix up copyright.  Use krb_strnlen() for
	actually detecting string length errors.  Use a struct in_addr to
	retrieve the IP address and assign it to paddress for return.  Use
	KRB4_GET* macros for decoding to avoid byteswapping problems.
	Zero out session key and decrypted ticket on error.

	* g_ad_tkt.c: Audit.  Fix up copyright.  Break out parsing of
	decrypted KDC reply packet into a separate function to simplify
	error handling somewhat.  Precompute string lengths for better
	length-checking.  Use KRB4_PUT* macros for encoding so that output
	is always big-endian.  Use KRB4_GET* macros for decoding to avoid
	byteswapping problems.  Stomp on session key on error conditions.

	* g_in_tkt.c: Audit.  Fix up copyright.  Precompute string lengths
	for better length-checking.  Use KRB4_PUT* macros for encoding so
	output is always big-endian.  Use KRB4_GET* macros for decoding to
	avoid byteswapping problems.  Use krb_strnlen() to actually detect
	string length errors.  Zero out session key and decrypted KDC
	reply once they're no longer useful.

	* mk_auth.c: Audit.  Fix up copyright.  Use moving pointer for
	encoding.  Use KRB4_PUT* macros for encoding to avoid alignment
	issues with using memcpy().  Use KRB4_GET* macros for decoding to
	avoid alignment issues with using memcpy().

	* mk_err.c: Audit.  Fix up copyright.  Precompute string length.
	Use KRB4_PUT* macros to always encode as big-endian.

	* mk_preauth.c: Audit.  Zero out key schedule after encryption.

	* mk_priv.c: Audit.  Fix up copyright.  Use KRB4_PUT* macros for
	encoding so output is always big-endian.

	* mk_req.c: Audit.  Fix up copyright.  Use moving pointer for
	encoding.  Precompute string lengths for better length-checking.
	Use KRB4_PUT* macros for encoding so output is always big-endian.
	Zero out session key after encryption.

	* mk_safe.c: Audit.  Fix up copyright.  Use KRB4_PUT* macros for
	encoding so output is always big-endian.

	* rd_err.c: Audit.  Fix up copyright.  Use KRB4_GET* macros to
	avoid alignment issues.

	* rd_preauth.c: Audit.  Zero key schedule after decrypting.

	* rd_priv.c: Audit.  Fix up copyright.  Use KRB4_GET* macros to
	avoid alignment issues.

	* rd_req.c: Audit.  Fix up copyright.

	* send_to_kdc.c (send_recv): Actually set rpkt->length, since some
	callers actually use it now to do length-checking.

	* strnlen.c: New file; compute string length, bounded by a
	maximum.  If the maximum number of characters has been read
	without encountering a NUL character, return -1.  This makes
	overflow checking of strings in buffers much easier.

2000-11-01  Ezra Peisach  <epeisach@mit.edu>

	* configure.in: Use AC_C_CONST and AC_CHECK_FUNCS instead of
	AC_CONST and AC_HAVE_FUNCS.

2000-10-23  Tom Yu  <tlyu@mit.edu>

	* mk_auth.c (krb_check_auth): Modify call to rd_priv() by kludging
	a cast of session key to C_Block *, since CNS is inconsistent in
	this area as well.

	* mk_priv.c (krb_mk_priv): Align with CNS by taking C_Block *.

	* mk_safe.c (krb_mk_safe): Align with CNS by taking C_Block *.

	* rd_priv.c (krb_rd_priv): Align with CNS by taking C_Block *.

	* rd_safe.c (krb_rd_safe): Align with CNS by taking C_Block *.

	* recvauth.c (krb_recvauth): Update call to mk_priv() to have the
	correct type.

Tue Oct 10 05:03:50 2000  Ezra Peisach  <epeisach@mit.edu>

	* kparse.c: Provide prototype for static struol(). Do not define
 	void as int (autoconf can handle that). 

2000-10-07  Tom Yu  <tlyu@mit.edu>

	* g_tkt_svc.c (CredIsExpired): Fix logic bug.

2000-10-06  Tom Yu  <tlyu@mit.edu>

	* rd_req.c (krb_rd_req): Call life_to_fime().

	* g_tkt_svc.c (CredIsExpired): Call life_to_time().

	* lifetime.c: Add comments for lifetimes[].  Add provisions for
	compile-time switching of short lifetimes.  Fix sign bug in
	time_to_life().

2000-10-05  Ezra Peisach  <epeisach@mit.edu>

	* netread.c, netwrite.c: Include unistd.h if present on machine
	for read/write prototypes.

	* in_tkt.c: Argument to umask should be of type mode_t.

	* configure.in: Test for uid_t (AC_TYPE_UID_T) and mode_t
	(AC_TYPE_MODE_T). 
	

2000-08-31  Tom Yu  <tlyu@mit.edu>

	* Makefile.in(OBJS, SRCS): Add lifetime.{o,c}.

	* lifetime.c: New file.  For the purposes of CMU and AFS
	compatibility, this implements the exponential krb4 ticket
	lifetimes for lifetime values above 127, in the krb_life_to_time()
	and krb_time_to_life() functions.  Values 127 and below are still
	treated normally.

Tue Aug 22 09:56:14 2000  Ezra Peisach  <epeisach@mit.edu>

	* rd_svc_key.c (krb54_get_service_keyblock): If the keytab
 	encryption type is a non-raw des3 key, bash its enctype. This
 	matches kdc/kerberos_v4.c.

Mon Aug 14 12:13:20 2000  Ezra Peisach  <epeisach@mit.edu>

	* cr_tkt.c (krb_cr_tkt_int): When prototypes were changed to not
 	include a narrow prototype, the flags were being sent OTW as four
 	bytes instead of one.

2000-08-02  Ezra Peisach  <epeisach@mit.edu>

	* tf_util.c (tf_init): Add KRB5_DLLIMP/KRB5_CALLCONV definitions
	for functions exported prototypes in krb.h.

2000-07-21  Ezra Peisach  <epeisach@mit.edu>

	* g_pw_tkt.c, unix_time.c: Add KRB5_DLLIMP/KRB5_CALLCONV defintion.

Thu Jun 29 17:13:53 2000  Ezra Peisach  <epeisach@home>

	* getst.c: Include <unistd.h> for read() prototype.

	* gethostname.c: Include <unistd.h> (if present) for gethostname()
	prototype.

	* g_pw_tkt.c (get_pw_tkt): Declare function returning as int.

	* g_ad_tkt.c, g_in_tkt.c, g_tkt_svc: Add parenthesis about
 	assignment used as truth value.

	* cr_ciph.c (create_ciph): Declare as returning int.

2000-07-20  Danilo Almeida  <dalmeida@mit.edu>

	* memcache.c: Add krb_in_tkt() function to initialize ticket for a
	given principal.  It is like in_tkt() but it is public and also
	takes a realm for credentials caches that require a full
	principal name (e.g., CCAPI).

2000-07-19  Danilo Almeida  <dalmeida@mit.edu>

	* in_tkt.c: Add krb_in_tkt() function to initialize ticket for a
	given principal.  It is like in_tkt() but it is public and also
	takes a realm for credentials caches that require a full
	principal name (e.g., CCAPI).

2000-07-03  Tom Yu  <tlyu@mit.edu>

	* cr_tkt.c: Frob prototypes so they don't involve narrow types.

2000-06-28  Ezra Peisach  <epeisach@mit.edu>

	* cr_tkt.c: Provide prototype for static krb_cr_tkt_int function
	before being used.

	* getst.c: Remove unused variable.

2000-06-09  Tom Yu  <tlyu@mit.edu>

	* configure.in: Check for strdup().

	* kparse.c: Remove strsave() and replace with an inlined static
	version of strdup() if HAVE_STRDUP is not defined.

	* g_ad_tkt.c (get_ad_tkt): ptr may be signed; cast while
	assigning to larger types.  [from Charles Hannum by way of
	ghudson]

2000-05-23  Ken Raeburn  <raeburn@mit.edu>

	* decomp_tkt.c (dcmp_tkt_int): Add a couple more length checks.
	Reject names that are exactly ANAME_SZ (etc) bytes long without
	the trailing nul, because krb.h says the *_SZ macros are "maximum
	sizes ... +1".
	* mk_auth.c (krb_mk_auth): Force nul termination of inst.
	* sendauth.c (krb_sendauth): Force nul termination of srv_inst.

2000-05-11  Nalin Dahyabhai  <nalin@redhat.com>

	* Password.c (GetUserInfo): Truncate user name if it's too long
	to fit.
	* cr_auth_repl.c (cr_auth_reply): Bail if the reply packet won't
	fit into its buffer.
	* cr_ciph.c (create_ciph): Ditto.
	* cr_death_pkt.c (krb_create_death_packet): Truncate "aname" to
	make it fit into the packet's data buffer.
	* cr_err_repl.c (cr_err_reply): Bail if the reply packet won't
	fit into its buffer.
	* cr_tkt.c (krb_create_ticket): Ditto.
	* g_ad_tkt.c (get_ad_tkt): Stop if data being added to buffer
	would overflow it.  Add more sanity checks when decomposing the
	credential received.
	* g_in_tkt.c (krb_mk_in_tkt_preauth): Bail if the request packet
	won't fit into its buffer.
	* g_krbhst.c (get_krbhst_default): Truncate the guessed KDC's
	hostname if it is too long.
	* g_pw_in_tkt.c: Remove useless strcpy() prototype.
	* kntoln.c (krb_kntoln): Don't overflow buffer "lname".
	* mk_err.c (krb_mk_err): Return the needed buffer length if the
	pointer passed in is NULL.
	* mk_req.c (krb_mk_req): Bail if the reply packet won't 
        fit into its buffer.
	* rd_req.c (krb_rd_req): Sanity check the realm name being read,
	and truncate the service name, nstance, and realm from credential
	read from keytab.
	* realmofhost.c (krb_realmofhost): Truncate realm names read
	from file if they are too long.
	* send_to_kdc.c (send_to_kdc): Truncate passed-in realm name.

2000-05-08  Ken Raeburn  <raeburn@mit.edu>

	* rd_req.c (krb_rd_req): Mask length byte with 0xff in case the
	length is over 127 and char is signed.

	* recvauth.c (krb_recvauth): If the number of bytes to be read
	from the net is not positive, just return an error.

2000-05-03  Tom Yu  <tlyu@mit.edu>

	* cr_tkt.c: Delete prototype for krb_cr_tkt_int(), since the
	definition is K&R style and contains narrow types.  Thank you
	HP/UX for having a compiler that actually makes this a fatal
	error.

2000-04-28  Ken Raeburn  <raeburn@mit.edu>
	    Nalin Dahyabhai  <nalin@redhat.com>

	* dest_tkt.c (dest_tkt): Don't overflow buffer "shmidname".
	* in_tkt.c (in_tkt): Don't overflow buffer "shmidname".
	* kuserok.c (kuserok): Don't overflow buffer "pbuf".
	* tf_util.c (tf_init): Don't overflow buffer "shmidname".
	* win_store.c (krb__get_cnffile): Don't overflow buffers "defname"
	and "cnfname".
	(krb__get_realmsfile): Don't overflow buffers "defname" and
	"realmsname".

2000-04-28  Tom Yu  <tlyu@mit.edu>

	* rd_req.c (krb_rd_req): Fix some uses of strcpy().

2000-03-12  Ezra Peisach  <epeisach@mit.edu>

	* cr_tkt.c (krb_cr_tkt_int): Add static prototype.
	* decomp_tkt.c: (dcmp_tkt_int): Add static prototype

1999-10-26  Wilfredo Sanchez  <tritan@mit.edu>

	* Makefile.in: Clean up usage of CFLAGS, CPPFLAGS, DEFS, DEFINES,
	LOCAL_INCLUDES such that one can override CFLAGS from the command
	line without losing CPP search patchs and defines. Some associated
	Makefile cleanup.

1999-10-07  Ken Raeburn  <raeburn@mit.edu>

	* rd_svc_key.c (krb54_get_service_keyblock): Close keytab before
	returning in success case.  Patch from Greg Hudson
	<ghudson@mit.edu>.

1999-08-26  Danilo Almeida  <dalmeida@mit.edu>

	* memcache.c (change_cache): Use PostMessage instead of SendMessage
	so we do not block.

Fri Aug 13 23:23:00 1999  Brad Thompson  <yak@mit.edu>

	* sendauth.c: Initialize __krb_sendauth_hidden_tkt_len so
	it doesn't end up in the common block.

	* pkt_clen.c: Initialize swap_bytes so that it doesn't end
	up in the common block.

Mon May 10 15:23:15 1999  Danilo Almeida  <dalmeida@mit.edu>

	* Makefile.in: Do win32 build in subdir.

Thu Apr 15 20:18:38 1999  Tom Yu  <tlyu@mit.edu>

	* g_cnffile.c (krb__get_srvtabname): Fix to actually extract
	krb5_srvtab value from profile, instead of always ignoring it.

Mon Feb  8 21:56:45 1999  Theodore Y. Ts'o  <tytso@mit.edu>

	* rd_req.c (krb_rd_req): Add appropriate #ifdef so that this code
		compiles cleanly when KRB4_USE_KEYTAB is not defined.

1998-12-05  Theodore Ts'o  <tytso@rsts-11.mit.edu>

	* rd_svc_key.c (krb54_get_service_keyblock): New function which
		searches the appropaite krb5 keytab file for the key to be
		used by the krb4 library.

	* rd_req.c (krb_rd_req): If the appropriate key cannot be found in
		the krb4 srvtab file, try calling krb54_get_service_keyblock.

	* decomp_tkt.c (dcmp_tkt_int): 
	* g_in_tkt.c (krb_mk_in_tkt_preauth): 
	* g_ad_tkt.c (get_ad_tkt): 
	* pkt_clen.c (pkt_clen): 
	* rd_err.c (krb_rd_err): 
	* rd_priv.c (krb_rd_priv): 
	* rd_req.c (krb_rd_req): 
	* rd_safe.c (krb_rd_safe): Use krb4_swab32 and krb4_swab16 instead
		of swap_u_long and swap_u_short.  The new byte swapping
		routines are faster and cleaner.

1998-11-13  Theodore Ts'o  <tytso@rsts-11.mit.edu>

	* Makefile.in: Set the myfulldir and mydir variables (which are
		relative to buildtop and thisconfigdir, respectively.)

	* configure.in: Remove KRB5_POSIX_LOCKS test.

	* win_store.c (krb__get_srvtabname): 
	* g_cnffile.c: Use krb5__krb4_context instead of init'ing and
		free'ing a krb5_context each time we need to read data
		from the configuration file.  We also define
		krb5__krb4_context in g_cnnfile.c, since it's a likely
		that any use of the krb4 library will pull in that file.

	* tf_util.c (tf_init): Use krb5_lock_file instead of trying to
		roll our own flock emulation.

Wed Aug 12 18:32:44 1998  Tom Yu  <tlyu@mit.edu>

	* rd_req.c (krb_set_key): Nuke the krb5_keyblock if it's set.
	(krb_set_key_krb5): New function to set a static krb5_keyblock for
	decryption purposes.
	(krb_clear_key_krb5): New function to clear the static
	krb5_keyblock if it's set.
	(krb_rd_req): Call decomp_ticket or decomp_tkt_krb5 as appropriate
	to the key type.

	* decomp_tkt.c (decomp_tkt_krb5): New wrapper to call
	dcmp_tkt_int.
	(decomp_ticket): Transform into wrapper to call dcmp_tkt_int.
	(dcmp_tkt_int): New internal function; use a krb5_keyblock to
	decrypt the ticket if present; else just use plain old C_Block.

	* cr_tkt.c (krb_create_ticket): Transform into a wrapper that
	calls krb_cr_tkt_int.
	(krb_cr_tkt_krb5): New wrapper to call krb_cr_tkt_int.
	(krb_cr_tkt_int): New internal function that potentially uses a
	krb5_keyblock to encrypt the ticket, or just a C_Block if the
	krb5_keyblock is not set.

Mon Aug 10 17:51:59 1998  Matthew D Hancher  <mdh@mit.edu>

	* rd_svc_key.c (read_service_key): Don't call krb5_kt_close() if 
	krb5_kt_resolve() fails, so we don't segfault if the keytab name 
	is invalid.

Fri Aug  7 11:04:03 1998  Tom Yu  <tlyu@mit.edu>

	* rd_safe.c (krb_rd_safe): Fix up call to quad_cksum().

	* mk_safe.c (krb_mk_safe): Fix up call to quad_cksum().

	* tf_util.c (tf_init): Add call to getuid() to initialize me.

Thu Jul 30 13:13:30 1998  Sam Hartman  <hartmans@utwig.mesas.com>

	* tf_util.c (tf_init): s/,/= so getuid() actually gets called

Sun Jul 26 17:51:24 1998  Sam Hartman  <hartmans@utwig.mesas.com>

	* Makefile.in (LIBMAJOR): Bump libmajor

Thu Jul  9 19:35:01 1998  Matthew D Hancher  <mdh@mit.edu>

	* tf_util.c (tf_init): Fixed a potential race condition in the opening 
	of v4 ticket files. tf_init() was calling lstat() followed by fopen().
	Now it calls fopen() and then calls lstat() and fstat() to check file 
	ownership and to check that it opened the file it thought it did. I 
	patched the shared memory code similarly, but since nothing uses it I
	don't have a good way to test it properly.
	
Wed Jun 24 03:09:28 1998  Tom Yu  <tlyu@mit.edu>

	* mk_priv.c (krb_mk_priv): Fix up call to pcbc_encrypt().  By
 	taking the address of key, the 5th arg to pcbc_encrypt() was
 	actually a (char **) cast to a (C_Block *).  The reason for this
 	is that a C_Block (actually a des_cblock) is typedef'ed from a
 	char[8], which by being in the parameters of the definition of
 	krb_mk_priv() becomes of type (char *).  This means that using the
 	address operator on key resulted in a pointer to a pointer to a
 	char rather than a pointer to a des_cblock, which would have been
 	innocuous in this case because pcbc_encrypt() actually takes a
	(des_cblock *) as the 5th (ivec) argument.  The moral is to never
 	pass around naked arrays as function arguments; instead, pass
 	around pointers to arrays to avoid spontaneous conversions to
 	pointers sneaking up.  Note that CNS actually uses a (C_Block *)
	everywhere, and maybe we should as well.  *whew*

1998-05-08  Theodore Ts'o  <tytso@rsts-11.mit.edu>

	* stime.c (krb_stime): 
	* log.c (krb_new_log, krb_log): 
	* klog.c (klog): Print the year using 4 digits to avoid Y2K issues.

Wed Apr 15 18:07:00 1998  Tom Yu  <tlyu@mit.edu>

	* Makefile.in (SHLIB_EXPDEPS): 
	(SHLIB_EXPLIBS): Rename libcrypto -> libk5crypto.

Thu Apr  9 18:44:16 1998  Tom Yu  <tlyu@mit.edu>

	* Makefile.in (includes): The header is krb_err.h, not
	/krb_err.h.

Sun Apr  5 19:51:21 1998  Tom Yu  <tlyu@mit.edu>

	* g_cnffile.c (krb__get_srvtabname): Fix up to not free context
	unless it is valid.

Wed Feb 18 16:17:49 1998  Tom Yu  <tlyu@mit.edu>

	* Makefile.in: Remove trailing slash from thisconfigdir.  Fix up
	BUILDTOP for new conventions.

Mon Feb  2 17:02:29 1998  Theodore Ts'o  <tytso@rsts-11.mit.edu>

	* Makefile.in: Define BUILDTOP and thisconfigdir in the Makefile

	* configure.in, Makefile.in: Remove use of CopyHeader from
		configure.in and move functionality to Makefile.in

Tue Jan  6 17:11:28 1998  Tom Yu  <tlyu@mit.edu>

	* in_tkt.c: Conditionalize use of macro do_seteuid, rather than
	redefining setreuid. [krb5-libs/521]

Sat Dec  6 22:17:28 1997  Ezra Peisach  <epeisach@mit.edu>

	* dest_tkt.c: Add <string.h> for memset prototype.

Wed Nov 19 11:04:27 1997  Ezra Peisach  <epeisach@mit.edu>

	* Makefile.in (clean-unix): krb_err.h resides in the kerberosIV
	 	subdir for make clean.

Wed Nov 19 00:01:07 1997  Tom Yu  <tlyu@mit.edu>

	* rd_safe.c (krb_rd_safe): Fix up call to quad_cksum.

	* mk_priv.c (krb_mk_priv): Fix up call to pcbc_encrypt.

	* mk_safe.c (krb_mk_safe): Fix up call to quad_cksum.

Tue Nov 18 23:49:01 1997  Tom Yu  <tlyu@mit.edu>

	* mk_req.c (krb_mk_req): Fix up call to pcbc_encrypt.

	* rd_req.c (krb_rd_req): Fix up call to pcbc_encrypt.

Tue Oct 21 09:02:51 1997  Ezra Peisach  <epeisach@mit.edu>

	* kparse.c: Include stdlib.h if present (for malloc prototyp)

Fri Oct 17 20:33:17 1997  Tom Yu  <tlyu@mit.edu>

	* mac_time.c: Don't use the type KRB_INT32; it was leaked from
	des.h and was just the wrong answer.  Use long instead.  While
	we're at it, declare gettimeofdaynet_no_offset() as static because
	we have no real need to export it.

Tue Sep 30 19:00:33 1997  Tom Yu  <tlyu@mit.edu>

	* tkt_string.c: Replace HAS_STDLIB_H with something more sane.

	* send_to_kdc.c: Replace HAS_STDLIB_H with something more sane.

	* realmofhost.c: Replace HAS_STDLIB_H with something more sane.

	* mk_preauth.c: Repalce HAS_STDLIB_H with something more sane.

	* memcache.c: Replace HAS_STDLIB_H with something more sane.

	* kparse.c: Replace HAS_STDLIB_H with something more sane.

	* configure.in: Replace HAS_STDLIB_H with something more sane.

Thu Sep 25 21:11:16 1997  Tom Yu  <tlyu@mit.edu>

	* put_svc_key.c: Replace HAS_UNISTD_H with something more sane.

	* kuserok.c: Replace HAS_UNISTD_H with something more sane.

	* configure.in: Replace HAS_UNISTD_H with something more sane.

Mon Sep  1 21:37:36 1997  Tom Yu  <tlyu@mit.edu>

	* decomp_tkt.c (decomp_ticket): Fix swapped args to memset.

Tue Aug 12 09:10:41 1997  Ezra Peisach  <epeisach@mit.edu>

	* Makefile.in (OSSRCS): Add $(srcdir)/ to source location.

Thu Aug  7 15:53:13 1997  Tom Yu  <tlyu@mit.edu>

	* g_cnffile.c: Check to see if context is NULL prior to calling
	profile_get_values.  Fixes krb5-libs/317.

Wed Apr  9 23:15:39 1997  Tom Yu  <tlyu@mit.edu>

	* realmofhost.c (krb_realmofhost): Add bounds checking to various
	things.

	* g_krbhst.c (krb_get_krbhst): Fix to bound fscanf and sscanf.

	* g_krbrlm.c (krb_get_lrealm): Fix to bound fscanf.

Sat Feb 22 19:02:08 1997  Richard Basch  <basch@lehman.com>

	* Makefile.in: Use some of the new library list build rules in
		win-post.in

Sat Feb 22 01:16:01 1997  Sam Hartman  <hartmans@tertius.mit.edu>

	* Makefile.in (SHLIB_DIRS): Remove extra shlib_explibs

Sat Feb 22 00:55:42 1997  Sam Hartman  <hartmans@mit.edu>

	* Makefile.in (SHLIB_EXPLIBS): Depend on -lcrypto -ldes425

Thu Feb 20 23:27:39 1997  Richard Basch  <basch@lehman.com>

	* memcache.c: Just use malloc/free, since _nmalloc isn't on
		all versions of Windows.

Sun Feb 16 21:11:51 1997  Richard Basch  <basch@lehman.com>

	* Makefile.in: Win16/Win32 cleanup

	* err_txt.c g_admhst.c g_cred.c g_krbhst.c g_krbrlm.c g_phost.c
	g_pw_in_tkt.c g_svc_in_tkt.c g_tkt_svc.c kname_parse.c mk_auth.c
	mk_err.c mk_preauth.c mk_priv.c mk_req.c mk_safe.c rd_err.c
	rd_priv.c rd_req.c rd_safe.c rd_svc_key.c realmofhost.c
	recvauth.c save_creds.c unix_glue.c
		Changed declaration of functions to use
		KRB5_DLLIMP/KRB5_CALLCONV instead of INTERFACE.

Sat Feb  1 08:44:00 1997  Ezra Peisach  <epeisach@mit.edu>

	* Makefile.in (STOBJLISTS): Fix up des425 reference.

Wed Jan  8 01:34:30 1997  Ezra Peisach  <epeisach@mit.edu>

	* Makefile.in, configure.in: Convert to new build procedure.

Mon Nov 18 20:40:39 1996  Ezra Peisach  <epeisach@mit.edu>

	* configure.in: Set shared library version to 1.0. [krb5-libs/201]

Thu Nov  7 12:33:06 1996  Theodore Y. Ts'o  <tytso@mit.edu>

	* g_in_tkt.c: 
	* sendauth.c: Fixed mangled copyright notice

Thu Jun 13 22:12:57 1996  Tom Yu  <tlyu@voltage-multiplier.mit.edu>

	* configure.in: remove ref to ET_RULES

Wed Jun 12 01:02:45 1996  Theodore Ts'o  <tytso@rsts-11.mit.edu>

	* Makefile.in: Remove unnecessary include config/windows.in.
		wconfig takes care of this automatically.

Wed May 22 07:41:15 1996  Sam Hartman  <hartmans@mit.edu>

	* Makefile.in (install-unix): Don't include an install rule, as it
 	is generated by aclocal.m4 for shared libs.

Tue Apr 30 19:26:11 1996  Ken Raeburn  <raeburn@cygnus.com>

	* configure.in: Evaluate AC_C_CROSS before AC_TRY_RUN, to clean up
	the output style.

Sun Apr 14 04:16:50 1996  Sam Hartman  <hartmans@mit.edu>

	* rd_svc_key.c (get_service_key): Don't declare open().

Wed Apr 10 19:18:57 1996  Richard Basch  <basch@lehman.com>

	* rd_svc_key.c (read_service_key): First try to read the V4
	service key from the V4 srvtab, and if it fails, try the keytab.
	A * instance will be translated into the default instance component
	(usually the FQDN of the local hostname).

Fri Mar 29 16:45:00 1996  Richard Basch  <basch@lehman.com>

	* rd_svc_key.c, configure.in: Try to read the V4 service key from a
		V5 keytab.

Tue Mar 19 11:23:13 1996  Ezra Peisach  <epeisach@kangaroo.mit.edu>

	* tf_util.c (tf_get_cred): Issue date is written out as a long,
		read back in as same.

Sat Feb 24 09:27:08 1996  Ezra Peisach  <epeisach@kangaroo.mit.edu>

	* g_svc_in_tkt.c, put_svc_key.c, rd_req.c, rd_svc_key.c: Declare
		krb__get_srvtabname(). 

Sat Jan 27 01:05:12 1996  Mark Eichin  <eichin@cygnus.com>

	* kuserok.c: use HAVE_SETEUID and HAVE_SETRESUID to figure out how
	to emulate seteuid instead of assuming hpux.
	* configure.in: test for seteuid as well; fold some tests into a
	single AC_HAVE_FUNCS.

Tue Dec  5 20:53:40 1995  Ezra Peisach  <epeisach@kangaroo.mit.edu>

	* Makefile.in: Shared library depends on krb5 library now.

	* configure.in: Pass krb5 library version number to Makefile.

Wed Nov 15 20:38:38 1995  Mark Eichin  <eichin@cygnus.com>

	* tf_util.c (emul_flock): initialize f to a copy of a static
 	(thus zero) struct flock, to avoid panic'ing sunos 4.1.4.

Sun Nov 12 05:26:08 1995  Mark W. Eichin  <eichin@cygnus.com>

	* g_cnffile.c (krb__get_srvtabname): new function, looks up
	[libdefaults]krb4_srvtab for use where KEYFILE used to be.
	* g_cnffile.c (krb__v5_get_file): new function, looks up argument
	in [libdefaults] and tries to open it as a filename. Returns
	filehandle (or NULL, if fopen failed.)
	(krb__get_cnffile, krb__get_realmsfile): use krb__v5_get_file to
	look up "krb4_config" or "krb4_realms" respectively. Also add
	$KRB_REALMS override for realms file.

Mon Oct  2 11:12:05 1995  Ezra Peisach  <epeisach@kangaroo.mit.edu>

	* configure.in (V5_MAKE_SHARED_LIB): Change rule to install
		version 0.1 of the library. Pass the libcrypto version
		number to Makefile

	* Makefile.in (CRYPTO_VER): Get the proper libcrypto version number

Mon Sep 25 16:54:34 1995  Theodore Y. Ts'o  <tytso@dcl>

	* Makefile.in: Removed "foo:: foo-$(WHAT)" lines from the
		Makefile. 

Wed Sep 06 14:20:57 1995   Chris Provenzano (proven@mit.edu)

        * DNR.c : s/keytype/enctype/g, s/KEYTYPE/ENCTYPE/g

Mon Aug  7 18:40:34 1995  Theodore Y. Ts'o  <tytso@dcl>

	* Makefile.in (SRCS): Include $(NETIO_SRCS) in the list of source
		files, instead of $(NETIO_OBJS)

	* tf_util.c (utimes): If __SVR4 is defined, #include <utime.h>,
		just as we do if __svr4__ is defined.

	* g_pw_in_tkt.c: If __SVR4 is defined, #include <sgtty.h>, just as
		we do if __svr4__ is defined.  (WARNING: This code still
		assumes that the BSD ioctl's are being supported, at least
		in compatibility mode.  We should really upgrade this code
		to use POSIX termios calls.)

Tue Jun 27 23:59:28 1995  Mark Eichin  <eichin@cygnus.com>

	* rd_req.c (krb_rd_req): from_addr is an address, so use unsigned
	KRB4_32 instead of long.

Tue Jun 27 23:50:08 1995  Mark Eichin  <eichin@cygnus.com>

	* rd_safe.c (krb_rd_safe): use KRB4_32 for address comparison
	and checksum swapping.

Tue Jun 27 15:49:35 EDT 1995	Paul Park	(pjpark@mit.edu)
	* kparse.c - Change LineNbr to sLineNbr to avoid conflict with kparse.h

Mon Jun 26 14:58:02 1995  Sam Hartman  <hartmans@tardis.MIT.EDU>

	* log.c: Use HAVE_TIME_H not NEED_TIME_H

	* klog.c: Change NEED_TIME_H to HAVE_TIME_H

	* configure.in: Check for sys/select.h.  Also check for time.h.

	* send_to_kdc.c: If sys/select.h exists, include it.

Fri Jun 23 18:15:07 1995  Tom Yu  (tlyu@dragons-lair)

	* configure.in: fix Sam's typo so libkrb4.a gets symlinked
		properly

Fri Jun 23 12:29:39 1995  Sam Hartman  <hartmans@tardis.MIT.EDU>

	* configure.in: Handle generation of rules to make static libs.

	* Makefile.in (LIBNAME): Changed to support new handling of static
        libraries


Fri Jun 16 11:15:45 EDT 1995	Paul Park	(pjpark@mit.edu)
	* Makefile.in - Change "./DONE" to "DONE" since we know how to make
		"DONE", hence a clean make won't get confused any more.
	* configure.in - Add shared library install target.


Thu Jun 15 18:07:24 EDT 1995	Paul Park	(pjpark@mit.edu)
	* Makefile.in - Add definitions for shared library build rules.
	* configure.in - Create symlinks for archive and shared library
		when we build them.

Fri Jun  9 19:28:22 1995    <tytso@rsx-11.mit.edu>

	* configure.in: Remove standardized set of autoconf macros, which
		are now handled by CONFIG_RULES.

Fri Jun  9 00:01:35 1995  Tom Yu  (tlyu@dragons-lair)

	* Makefile.in, configure.in: use CopyHeader rather than hand-coded
		header install rule.

Fri May 26 21:11:38 1995  Theodore Y. Ts'o  (tytso@dcl)

	* cr_err_repl.c (cr_err_reply): Remove backward compatibility code
		for Kerberos V3 (!) which was causing problems for shared
		libraries.  Library code shouldn't try to reference global
		variables defined by the calling application!

Sun May 21 16:06:20 1995  Ezra Peisach  <epeisach@kangaroo.mit.edu>

	* dest_tkt.c: If O_SYNC is not defined, define as 0.

	* in_tkt.c: If O_SYNC is not defined, define as 0.

Thu May 18 14:43:51 1995  Ezra Peisach  <epeisach@kangaroo.mit.edu>

	* in_tkt.c: Use HAVE_SETREUID and HAVE_SETRESUID to define 
		setreuid properly.

	* configure.in: Check for setreuid and setresuid

Sun May  7 08:05:56 1995  Ezra Peisach  <epeisach@kangaroo.mit.edu>

	* mk_preauth.c: Add <string.h> and either <stdlib.h> or provide
		prototypes for malloc.

	* g_svc_in_tkt.c: Add <string.h>


	* rd_preauth.c: Add <string.h>

	* mk_auth.c: Include "krb4-proto.h" for get_phost definition.

	* g_pw_in_tkt.c (stub_key): Add <string.h>

	* send_to_kdc.c: Ifdef on HAS_STDLIB_H not POSIX

	* realmofhost.c: Ifdef on HAS_STDLIB_H not POSIX

	* memcache.c: Ifdef on HAS_STDLIB_H not POSIX

	* configure.in: Check for stdlib.h

Thu May  4 10:03:22 1995  Tom Yu  (tlyu@dragons-lair)

	* put_svc_key.c (put_svc_key): remove spurious & in front of fkey
		(it's a char[] and takint address of it is redundant)

	* recvauth.c (krb_recvauth): remove spurious & in front of
		reference to kdata->session

	* rd_req.c (krb_rd_req): remove spurious & in front of reference
		to ad->session

	* g_in_tkt.c(decrypt_tkt): remove spurious & in front of reference
		to key (it is a C_Block and taking address of it is
		redundant)

	* Makefile.in: new includes target to install krb_err.h in
		$(BUILDTOP)/include; includes depends on krb_err.h.
		Previously, it was attempting to install a header that had
		not yet been generated!

Tue May  2 09:30:50 1995  Ezra Peisach  <epeisach@kangaroo.mit.edu>

	* Makefile.in (clean-unix): Remove krb_err.h from the include
		directory. 

Sat Apr 29 00:33:47 1995  Tom Yu  (tlyu@dragons-lair)

	* g_phost.c: removed references to sys/param.h and netdb.h
	* realmofhost.c: ditto

Fri Apr 28 13:03:23 1995  Theodore Y. Ts'o  <tytso@dcl>

	* tf_util.c, configure.in: Added check for POSIX_FILE_LOCK to
		enable POSIX file locking.

	* tf_util.c: Add #include of fcntl.h

	* month_sname.c, one.c: Remove unnecessary include of conf.h

Fri Apr 28 01:55:18 1995  Mark W. Eichin  <eichin@cygnus.com>

	* kuserok.c: HAS_UNISTD_H instead of USE_.
	* configure.in: test for HAVE_STRSAVE (for kparse.c).

Fri Apr 28 01:38:42 1995  Mark W. Eichin  <eichin@cygnus.com>

	* configure.in: use AC_CHECK_SIZEOF(int) to set BITS16/BITS32.
	Use AC_TRY_RUN test to set MSBFIRST or LSBFIRST.

Tue Mar 28 09:19:23 1995  Mark Eichin  <eichin@cygnus.com>

	* send_to_kdc.c (send_to_kdc): only use secondary port if entry
	for primary doesn't have an explicit port number. Secondary port
	is still guessed to be 750. Also *don't* switch to the secondary
	port in general, since we might be using multiple realms.

Tue Feb 14 23:24:50 1995  John Gilmore  <gnu@cygnus.com>

	* sendauth.c (krb_net_rd_sendauth):  Result is a Kerberos error
	code, not an errno.

Mon Feb  6 16:11:52 1995  John Gilmore  (gnu at toad.com)

	* mac_store.c (DeleteServerMap):  When skipping a realm map, skip
	also the admin-flag byte; else walking the list of strings gets
	very confused. 

	* mac_stubs.c (kdriver):  Rename static variable to mac_stubs_kdriver,
	and export it to callers.
	(krb_get_ticket_for_service):  Circumvent MPW compiler bug that
	doesn't like array->memb inside a sizeof.  array[0].memb works.

Wed Feb 1 12:00:00 1995  John Rivlin  <jrivlin@cygnus.com>

	* Makefile.in: Modify install-windows and clean-windows
	targets to install libraries into src/windows directory.

Tue Jan 24 10:35:31 1995  Ian Lance Taylor  <ian@sanguine.cygnus.com>

	* g_pw_in_tkt.c (krb_get_pw_in_tkt_preauth): Check for a NULL
	password if _WINDOWS or macintosh.

Mon Jan 23 17:06:10 1995  Ian Lance Taylor  <ian@sanguine.cygnus.com>

	* g_pw_in_tkt.c (passwd_to_key): When not _WINDOWS or macintosh,
	restore code to call des_read_password if passwd is NULL.
	(krb_get_pw_in_tkt): Only error out if password is NULL if
	_WINDOWS or macintosh.

	* g_krbhst.c (get_krbhst_default): New static function.
	(krb_get_krbhst): Use get_krbhst_default.

Fri Jan 20 12:00:00 1995  John Rivlin  (jrivlin@fusion.com)

	* Makefile.in: Changed libentry to debug in link command as
	libentry is no longer provided in the Visual C++ environment.
	Libentry is part of the library in Visual C++.  Debug is used
	purely to satisfy the syntax requirements of the link command.

Thu Jan 19 14:18:10 1995  Ian Lance Taylor  <ian@sanguine.cygnus.com>

	* sendauth.c (krb_net_rd_sendauth): If the raw ticket length looks
	like the start of a warning from SunOS4 ld.so, just ignore the
	warning message, and look for the ticket after it.

Mon Jan 16 16:11:21 1995  John Gilmore  <gnu@cygnus.com>

	* kuserok.c (kuserok):  Allow realm to be defaulted in the
	~/.klogin file; this simplfies DejaGnu testing of Kerberos.
	Fix bug that left kname_parse arguments uninitialized. 

Mon Jan 16 11:54:01 1995  Ian Lance Taylor  <ian@sanguine.cygnus.com>

	* krb_err.et: Change KRBET_RD_APTIME message from ``delta_t too
	big'' to ``time is out of bounds.''

	* send_to_kdc.c: If POSIX, include <stdlib.h> instead of declaring
	malloc, calloc, and realloc.
	(cached_krb_udp_port): Make static.
	(send_to_kdc): If send_recv fails, and the kerberos port number
	used is from getservbyname, and is not 750, then try sending to
	port 750.

	* realmofhost.c (krb_realmofhost): If DO_REVERSE_RESOLVE is
	defined, canonicalize using gethostbyaddr.

Thu Jan 12 17:40:26 1995  Ian Lance Taylor  <ian@sanguine.cygnus.com>

	* in_tkt.c (in_tkt): Set umask to 077 around creation of ticket
	file to ensure that it is created with write access, even if the
	user has a screwy umask value.

Thu Dec 29 23:59:49 1994  Mark Eichin  <eichin@cygnus.com>

	* g_in_tkt.c (krb_get_in_tkt_preauth): factored out into
	krb_mk_in_tkt_preauth and krb_parse_in_tkt. This simplifies the
	SNK4 support on platforms that can't do callbacks from (shared)
	libraries.

Tue Dec 27 11:12:54 1994  Ian Lance Taylor  <ian@cygnus.com>

	* g_in_tkt.c (krb_get_in_tkt_preauth): Rewrite switch statement to
	work when compiled by SCO 3.2v4 native C compiler.
	* g_ad_tkt.c (get_ad_tkt): Likewise.

Fri Dec 23 15:47:20 1994  Ian Lance Taylor  <ian@sanguine.cygnus.com>

	* memcache.c (unix): Define if _AIX is defined (AIX compiler does
	not predefine unix).

Fri Dec 16 18:57:40 1994  Ian Lance Taylor  <ian@sanguine.cygnus.com>

	* memcache.h: Use PROTOTYPE in declarations.
	* memcache.c: Rewrite function definitions to use Classic C
	parameter repetition rather than prototypes.

Thu Dec 15 18:23:37 1994  Ian Lance Taylor  <ian@sanguine.cygnus.com>

	* memcache.c: Add typedefs and macro definitions to make this file
	compile on Unix as well as on Windows and the Mac.

Wed Dec 14 19:31:24 1994  Ian Lance Taylor  <ian@sanguine.cygnus.com>

	* g_in_tkt.c (krb_get_in_tkt_preauth): Comment out assignment to
	exp_date, since it is not used.

Wed Nov 23 12:30:49 1994  Ian Lance Taylor  <ian@sanguine.cygnus.com>

	* fakeenv.c (_findenv, unsetenv): New functions, copied in from
	setenv.c.  The telnet server uses unsetenv.

Wed Nov 23 00:53:10 1994  John Gilmore  (gnu@cygnus.com)

	* realmofhost.c (krb_realmofhost):  Allow arbitrary host
	names here, as in krb_get_phost, by canonicalizing the name
	into a fully qualified name using gethostbyname().  This
	has the effect of letting users not set the "local realm"
	config knob in more cases, since a name without a dot will
	be canonicalized and searched-for in the domain-to-realm
	database, rather than being assumed to be in the local realm.
	This problem was found by using unqualified hostnames in Wintel.

Wed Nov 23 00:26:17 1994  John Gilmore  (gnu@cygnus.com)

	Clean up a few misleading error messages.

	* memcache.c (krb_get_tf_fullname):  Return NO_TKT_FIL if
	there are no tickets cached, just like from tf_util.c.
	* g_ad_tkt.c (get_ad_ticket):  If we try cross-realm 
	authentication, and it fails for lack of a key in the
	kerberos database, return AD_NOTGT ("No ticket-
	granting ticket") rather than KDC_PR_UNKNOWN ("Principal unknown").
	* krb_err.et, err_txt.c:  Update NO_TKT_FIL error message from
	"No ticket file (tf_util)" to "You have no tickets cached".

Thu Nov 17 12:31:27 1994  Ian Lance Taylor  <ian@sanguine.cygnus.com>

	* mk_preauth.c (krb_mk_preauth): des_key_sched takes a des_cblock
	argument, not des_cblock *, so remove the cast.
	* rd_preauth.c (krb_rd_preauth): Likewise.

Wed Nov 16 22:13:28 1994  Mark Eichin  (eichin@cygnus.com)

	* mk_preauth.c (krb_mk_preauth): use des_key_sched instead; check
	its return value and fail if it fails.
	* rd_preauth.c (krb_rd_preauth): ditto.

Wed Nov 16 17:35:07 1994  Mark Eichin  (eichin@cygnus.com)

	* mk_preauth.c (krb_mk_preauth): add R3 implementation (and
	NOENCRYPTION version) which passes encrypted aname.
	(krb_free_preauth): free storage from both implementations.
	* rd_preauth.c (krb_rd_preauth): add R3 implementation.

Wed Nov 16 17:28:14 1994  Mark Eichin  (eichin@cygnus.com)

	* g_pw_in_tkt.c (stub_key): use memcpy, in case the C_Block is an
	array and not a struct.

Wed Nov  9 12:45:02 1994  Ian Lance Taylor  <ian@sanguine.cygnus.com>

	* in_tkt.c: Fix thinko in last change.

Fri Nov  4 12:05:57 1994  Ian Lance Taylor  <ian@sanguine.cygnus.com>

	* in_tkt.c: Don't redefine setreuid if both hpux and __svr4__.

Fri Nov  4 02:10:58 1994  John Gilmore  (gnu@cygnus.com)

	Make it build on MS-Windows again.

	* Makefile.in (NETIO_SRCS, NETIO_OBJS):  Break out, since these
	are required on MS-Windows and prohibited on Mac.
	(kerberos.dll):  Avoid line-length problems by copying 
	libraries from other directories and using very short names.

Tue Nov  1 15:47:44 1994  Ian Lance Taylor  <ian@sanguine.cygnus.com>

	* dest_tkt.c: Include "krb.h" before <stdio.h>.

Mon Oct 31 19:41:14 1994  Ian Lance Taylor  <ian@sanguine.cygnus.com>

	* Makefile.in (CODE): Use Makefile.in instead of Imakefile.

Fri Oct 28 15:21:56 1994  Ian Lance Taylor  <ian@sanguine.cygnus.com>

	* month_sname.c: Include conf.h.
	* one.c: Likewise.

	* rd_req.c (krb_rd_req): Pass address of the array ad->session, to
	match function definition.

Wed Oct 12 00:37:46 1994  Julia Menapace  (jcm at toad.com)

	* Password.c: Include kerberos.h not Krb.h.  Define KRB_DEFS to
	avoid multiple symbol definitions from krb_driver.h.  Needs further
	cleanup but not just before release.

Mon Oct 10 20:07:56 1994  Julia Menapace  (jcm at toad.com)

	* g_tkt_svc.c: (cacheInitialTicket) moved to new file Password.c

	* mac_glue.c:  Remove superfluous comment.

	* mac_stubs.c: Add code translating unix function call to mac
	driver control call for krb_get_tf_fullname

	* macsock.c: Remove superflous comment.

	* memcache.c: Remove unused #includes
	(krb_get_tf_realm) pass tktfile instead of blank to
	krb_get_tf_fullname.

	(get_tf_fullname): Because the symantics of GetNthCredentials
	(called by this routine) were changed to disable multiple named
	caches (for UNIX compatability) we have to replace the user name
	and instance it returns with the actual name and instance of the
	current cache, set by in_tkt and stored in file static global
	variables.

Mon Oct 10 13:37:34 1994  Julia Menapace  (jcm at toad.com)

	* mk_auth.c:  New file, created from sendauth.c.  Contains just
	the portable parts of sendauth.c (krb_mk_auth and krb_check_auth).
	* sendauth.c (krb_mk_auth, mrb_check_auth):  Move these functions
	to mk_auth.c.
	* Makefile.in (SRCS, OBJS, SERVER_KRB_SRCS, SERVER_KRB_OBJS):
	Add mk_auth.c to SRCS/OBJS; remove sendauth.c, netread.c, and 
	netwrite.c from SRCS/OBJS to SERVER_KRB_SRCS/OBJS.

Thu Sep 29 15:31:24 1994  John Gilmore  (gnu@cygnus.com)

	* realmofhost.c (krb_realmofhost):  Correct off-by-one error in
	default handling of top and second-level domains.

Fri Sep 23 12:00:00 1994  John Rivlin  (jrivlin@fusion.com)

	* Makefile.in: Added kstream library to kerberos.dll

	* kerberos.def: Added kstream library to kerberos.dll

Fri Aug 19 12:00:00 1994  John Rivlin  (jrivlin@fusion.com)

	* g_pw_in_.c: Added (key_proc_type) cast for stub_key to remove
	warnings with prototypes active.

	* kerberos.def: Added des_ecb_encrypt to externals for telnet.

Wed Sep 14 12:58:05 1994  Julia Menapace  (jcm@cygnus.com)

	* mac_stubs.c (krb_get_err_text): make return type const.
	(GetNthRealmMap): add routine to stubs library to generate a
	driver call returning the Nth Realm mapping.
	(GetNthServerMap): add routine to stubs library to generate a
	driver call returning the Nth server mapping.
	* g_tkt_svc.c (CacheInitialTicket): If user name has changed save
	it.
	* memcache.c (krb_save_credentials): Fill in credential with
	currently authorized user name and instance expected by kerberos,
	(passed to and stored by in_tkt) instead of FIXED user name and
	instance used to select credentials cache (is same for all cases to
	disable multi named caches, using/reusing single named cache for
	all cases).

Tue Sep 13 16:45:01 1994 Julia Menapace (jcm@cygnus.com)

	* err_txt.c (MULTIDIMENSIONAL_ERR_TXT):  Rename from 
	UNIDIMENSIONAL_ARRAYS to reflect what's actually going on.

Thu Aug 18 20:26:16 1994  Mark Eichin  (eichin@cygnus.com)

	* g_tkt_svc.c (CredIsExpired): use proper style of declaration so
	that it works with k&r compilers.

Wed Aug 10 13:47:55 1994  Mark Eichin  (eichin@cygnus.com)

	* err_txt.c (krb_err_txt): Export it again, to avoid gratuitous
	incompatibility. Programs that can't deal with the use of the
	array don't have to use it.

Fri Aug  5 15:55:02 1994  Mark Eichin  (eichin@cygnus.com)

	* tf_util.c (tf_save_cred): cast 0 to (off_t), don't assume 0L
	will work (it doesn't in netbsd.)

Mon Aug 6 12:00:00 1994  John Rivlin  (jrivlin@fusion.com)

	* g_cnffile.c: Added definition for getenv.

	* Makefile.in: Added KADM_LIB_FOR_DLL library in kerberos.dll
	Updated clean target to avoid deleteion of krb_err.h under
	Windows.

	* kerberos.def: Added inteface for KRB_GET_NOTIFICATION_MESSAGE,
	KADM_INIT_LINK, KADM_CHANGE_PW, KADM_CHANGE_PW and KADM_GET_ERR_TEXT
	and renumbered entrypoints for consistency.

	* memcache.c (change_session_count, change_cache): Changed 
	change_session_count to change_cache.  This
	routine now maintains the lock on the library as well as sending
	ot broadcast messages to all to level windows when the cache
	changes. Also changed all calls to above routine throughout 
	memcache.c.

	* netwrite.c: use newly added SOCKET_READ and SOCKET_EINTR values
	to avoid use of read on Windows.  VMS dependencies moved to c-vms.h
	for uniformity with other platforms.

	* netread.c: use newly added SOCKET_READ and SOCKET_EINTR values
	to avoid use of read on Windows.  VMS dependencies moved to c-vms.h
	for uniformity with other platforms.
	
	* memcache.c: sname, sinst, srealm not stored if null pointers
	passed in.  This avoids problems found porting kpasssd.

Mon Aug 1 12:00:00 1994  John Rivlin  (jrivlin@fusion.com)

	* kerberos.def: Changed heapsize to 8192 to avoid LocalAlloc
	failure messages on startup. Added kadm_change_pw2 to external
	interface.
	
	* win_glue.c (krb_get_default_user, krb_set_default_user): Have
	been moved to win_store.c.

	* win_store.c: Use KERBEROS_INI and INI_xxx values in c-windows.h
	rather than hard coded strings.

	* win_store.c (krb_get_default_user, krb_set_default_user): Added
	to save and retieve value of "[DEFAULTS] user =" in kerberos.ini
	file.

	* realmofhost.c (krb_realmofhost): Now calls krb__get_relmsfile
	rather than opening up the krb.realms file directly so that
	Windows version can override the location of the file.

	* win_stor.c: Stores the 

Wed Jul 27 12:00:00 1994  John Rivlin  (jrivlin@fusion.com)

	* g_cnffil.c (krb__get_realmsfile): Added a routine to open
	the krb.realms file so that the routine can be overridden
	in Windows implementation with a routine which looks up
	the name of the realms file in the kerberos.ini file.

	* win_store.c: Created to parallel the Mac implementation.
	Routines in this file will provide access to the krb.conf,
	krb.realms files and other configuration information.

	* ren.msg: Created entry for win_store.

	* Makefile.in: Move g_cnffile.c to REALMDBSRCS to allow 
	Windows to override this functionality with a routine in 
	win_store.c routine.

Tue Jul 26 12:00:00 1994  John Rivlin  (jrivlin@fusion.com)

	* netread.c: errno redefinition under Windows ifdefed out.
	* netwrite.c: errno redefinition under Windows ifdefed out.

Fri Jul 22 23:07:21 1994  Mark Eichin  (eichin@cygnus.com)

	* rd_preauth.c (krb_rd_preauth): change interface to include the
	decrypted key (since the server has already looked it up.)

Thu Jul 21 17:24:13 1994  Mark Eichin  (eichin@cygnus.com)

	* g_krbrlm.c (krb_get_lrealm): use krb__get_cnffile, don't
	(mis)declare fopen.
	* g_krbhst.c (krb_get_krbhst): ditto.
	* g_admhst.c (krb_get_admhst): ditto.
	* Makefile.in (OBJS, SRCS): build get_cnffile.c.

Thu Jul 21 17:10:35 1994  Mark Eichin  (eichin@cygnus.com)

	* g_pw_in_tkt.c (krb_get_pw_in_tkt_preauth): *MUST* continue to
	allow the password not to be passed in, since there is code that
	does interesting things in the passwd_to_key routine.

	* g_svc_in_tkt.c (stub_key): don't assume C_Block is a struct; use
	memcpy instead of *.

	* log.c (krb_log): use char* instead of int for default args.
	Don't declare fopen explicitly, let stdio.h do it.
	Don't include sys/time.h under VMS.
	* klog.c (klog): ditto.

Wed Jul 20 22:34:11 1994  Mark Eichin  (eichin@tweedledumber.cygnus.com)

	* rd_safe.c (krb_rd_safe): handle direction bit correctly when
	krb_ignore_ip_address is set.

	* rd_priv.c (krb_rd_priv): same.

	* send_to_kdc.c: support arbitrary KDC port number in krb.conf file.

	* g_cnffile.c: new file. common interface to krb.conf.
	vmslink.com: new file. linker script to build libkrb.olb under
	VMS; run as @vmslink.
	vmsswab.c: vms runtime doesn't have swab.

Wed Jul 20 20:38:19 1994  Mark Eichin  (eichin@cygnus.com)

	* kparse.c (strsave): only define locally if HAVE_STRSAVE isn't set.

Tue Jul 19 12:00:00 1994  John Rivlin (jrivlin@fusion.com)

	* memcache.c (NewHandle, SetHandleSize, MemError): Updated to return
	valid Mac compatable error codes.  Got rid of warning messages for 
	pointer mismatches.

	* memcache.c (change_session_count): added routine and calls to it
	to facilitate cross session ticket cacheing under Windows.  
	Moved fNumSessions definition up so that Windows code can get to it.
	
	* win_glue.c (LibMain, get_lib_instance): added to return HINSTANCE 
	of library which is now saved in LibMain.

Tue Jul 19 16:08:49 1994  Ken Raeburn  (raeburn@cujo.cygnus.com)

	* klog.c (klog): Leave local static array logtype_array
	uninitialized, to put it in bss.

	* g_ad_tkt.c (rep_err_code): Variable deleted.
	(get_ad_tkt): Make it automatic here.  Local variables pkt_st,
	rpkt_st, cip_st, tkt_st no longer static.
	* kname_parse.c (kname_parse): Local variable buf no longer
	static.
	* rd_req.c (krb_rd_req): Local variables ticket, tkt, req_id_st,
	seskey_sched, swap_bytes, mutual, s_kvno no longer static.
	* rd_safe.c (calc_cksum, big_cksum, swap_bytes): Variables
	deleted.
	(krb_rd_safe): Make them automatic variables here.  Local variable
	src_addr no longer static.
	* rd_priv.c (c_length, swap_bytes, t_local, delta_t): Variables
	deleted.
	(krb_rd_priv): Make them automatic variables here.  Local variable
	src_addr no longer static.
	* mk_safe.c (cksum, big_cksum, msg_secs, msg_usecs, msg_time_5ms,
	msg_time_seg): Variables deleted.
	(krb_mk_safe): Make them automatic variables here.
	* mk_priv.c (c_length, msg_time_5ms, msg_time_sec, msg_time_usec):
	Variables deleted.
	(krb_mk_priv): Make them automatic variables here.  Local variable
	c_length_ptr also no longer static.

	* pkt_clen.c (swap_bytes): No longer explicitly extern.
	* g_ad_tkt.c (swap_bytes): Make it extern here.

	* kparse.c (LineNbr, ErrorMsg): Now static.

	* err_txt.c (krb_err_txt): Don't export this name.  Make it const
	again.

	* netread.c: Include errno.h.
	(errno): Declare.
	(krb_net_read): On EINTR, retry read.
	* netwrite.c: Include errno.h.
	(errno): Declare.
	(krb_net_write): On EINTR, retry write.

Mon Jul 18 19:04:03 1994  Julia Menapace (jcm@cygnus.com)

	* err_txt.c (krb_err_txt): if the C compiler can't initialize
	multidimentional arrays, declare it differently (controlled by
	UNIDIMENSIONAL_ARRAYS).

	* mac_stubs.c (krb_get_cred, krb_save_credentials,
	krb_delete_cred, krb_get_nth_cred, krb_get_num_cred): new
	functions to implement credentials caching.

	* memcache.c  (krb_get_cred, krb_save_credentials,
	krb_delete_cred, krb_get_nth_cred, krb_get_num_cred): actual
	implementation of this functionality.

Fri Jul 15 17:35:30 1994  John Rivlin (jrivlin@fusion.com)

	* ren.msg: updated to handle all files (changelogs, makefiles etc)

	* Makefile.in: added "-" on clean: to avoid stupid messages

	* g_pw_in_tkt.c (get_pw_in_tkt_preauth): added INTERFACE 
	for kinit.

	* kerberos.def: clean up, removed unused function references
	
	* win_glue.c (krb_start_session): fixed syntax error

	* win_glue.c (krb_end_session): fixed syntax error

Tue Jul 12 17:35:30 1994  D. V. Henkel-Wallace  (gumby@rtl.cygnus.com)

	* ren.msg: add record for g_tkt_svc.c

Fri June 8 02:40:54 1994  John Rivlin  (jrivlin@fusion.com)

	* makefile.in: Updated file with portable directory syntax for PC.
	Changed .o and .a references to portable syntax
	Removed all response files which needed to be generated under unix
	to simplify configure process so that it may be run on the PC.
	Placed objects in .lib file so that DLL construction can take place
	without a response file.  This solves a problem with running out of
	memory on the PC during builds.
	Updated clean: target to place rm commands on seperate lines for
	compatibility with PC DEL command.

	* win_glue (krb_start_session): Added a dummy parameter to match 
	prototype.

	* win_glue (krb_end_session): Added a dummy parameter to match 
	prototype.

Tue Jul  5 11:25:31 1994  Ken Raeburn  (raeburn@cujo.cygnus.com)

	* err_txt.c (krb_err_txt): Now const.
	(krb_get_err_text): Returns pointer to const.
	* month_sname.c (month_sname): Month name array and return type
	now both const.
	* one.c (krbONE): Now const.

	* g_tkt_svc.c: Include string.h.

	* kntoln.c (krb_kntoln): Static variable lrealm is no longer
	explicitly initialized; now in bss.
	* tf_util.c (krb_shm_addr, tmp_shm_addr, krb_dummy_skey): Ditto.
	* tkt_string.c (krb_ticket_string): Ditto.

	* mk_req.c (krb_mk_req): Removed "static" from many function
	variables.

	* tkt_string.c (krb_set_tkt_string): Deleted extra whitespace,
	unnecessary "return" statement.

Fri Jul  1 04:50:06 1994  John Gilmore  (gnu@cygnus.com)

	* macsock.c:  Eliminate "TCPTB.h".
	* mac_stubs.c (isname, isinst, isrealm):  Remove, useless.
	(krb_get_pw_in_tkt_preauth):  Stub out to be the same as
	krb_get_pw_in_tkt, for kinit's sake.

	* mac_stubs.c (hicall):  Fix error handling somewhat.

	* Makefile.in (SRCS, OBJS):  Add g_tkt_svc.c, .o.

	* kname_parse.c, rd_priv.c, rd_safe.c, unix_glue.c:  Typos.

Fri Jul  1 03:55:29 1994  John Gilmore  (gnu@cygnus.com)

	Make Kerberos work in a Macintosh driver using Think C.

	* %KrbLib-project:  Think C "project file" (sort of
	makefile and object files rolled into one -- all binary)
	for the Kerberos library built for linking into applications
	(for debugging).
	* %KrbLib-project-A4:  Ditto, for linking into device drivers.

	* mac_stubs.c:  New file, implements the function-call
	interface of "kerberos.h" by making calls to a device-driver
	using the hairy Mac interface of "krb_driver.h".  If you
	link with this, your Mac program can use a portable, clean
	interface to Kerberos.

	* g_tkt_svc.c:  New file, krb_get_ticket_for_service,
	an "easy application kerberizer", derived from kclient.

	* err_txt.c (krb_err_txt):  Avoid pointers to string initializers,
	since Think C can't cope with this in device drivers.
	(krb_get_err_table):  Remove interface, unused.

	* month_sname.c:  Avoid pointers to string initializers.
	* kname_parse.c:  Add FIXME comment about args.
	* mac_glue.c (read, write krb_ignore_ip_address):  Stub out.
	* macsock.c, memcache.c, sendauth.c:  Lint.  Think includes.

	* mac_store.h:  Eliminate static and obsolete stuff.
	* mac_store.c:  Update includes for Think.
	(gUserName):  Make static.
	(krb_get_default_user, krb_set_default_user):  Add.
	* unix_glue.c, win_glue.c (krb_set_default_user):  Add stub.

	* g_ad_tkt.c, kname_parse.c, memcache.c, mk_priv.c, mk_req.c,
	mk_safe.c, pkt_clen.c, rd_priv.c, rd_safe.c:  Remove uses of
	printf, by using DEB macro.

	* send_to_kdc.c:  Change to "krbports.h".
	(DEB):  Remove definition in favor of krb.h.
	(all calls to DEB):  Avoid passing stdout or stderr.

Thu Jun 30 22:58:59 1994  John Gilmore  (gnu@tweedledumb.cygnus.com)

	* *.c:  Remove remaining RCS ID strings.  Strings used as `char *'
	initializers upset Think C when building device drivers, since it
	doesn't have a good way to relocate the pointers when the driver
	is loaded.

	* *.c:  Use #include "..." rather than #include <...> for
	our own local include files, because Think C can't find them
	when enclosed in <...>.

Thu Jun 30 17:48:26 1994  Ken Raeburn  (raeburn@cujo.cygnus.com)

	* send_to_kdc.c (prog): Now const pointer to const.
	(timeout): Static var deleted.
	(send_recv): Use a local timeout structure instead, reinitialized
	before each use, in case select modifies its value.

Wed Jun 22 19:42:50 1994  Mark Eichin  (eichin@cygnus.com)

	* mk_preauth.c (krb_free_preauth): New function to free up storage
	allocated by krb_mk_preauth (if any.)

	* g_pw_in_tkt.c (krb_get_pw_in_tkt_preauth): use krb_free_preauth
	to possibly release storage used by krb_mk_preauth.

	* g_svc_in_tkt.c (krb_get_svc_in_tkt_preauth): use
	krb_free_preauth to possibly release storage used by krb_mk_preauth.

Wed Jun 22 19:33:21 1994  Mark Eichin  (eichin@cygnus.com)

	* put_svc_key.c: USE_UNISTD_H to get SEEK_CUR if neccessary.

Wed Jun 22 18:11:49 1994  Ken Raeburn  (raeburn@cujo.cygnus.com)

	* sendauth.c (krb_mk_auth): Don't call memset with BUFSIZ, since
	the field in question is only MAX_KTXT_LEN bytes long.

	* in_tkt.c, mk_priv.c, mk_safe.c, pkt_cipher.c, pkt_clen.c,
	rd_err.c, rd_priv.c, rd_safe.c, tf_util.c: Include string.h.

Wed Jun 22 15:11:35 1994  John Gilmore  (gnu@cygnus.com)

	* ren.msg:  Add put_svc_key.c.

Wed Jun 22 15:03:53 1994  Mark Eichin  (eichin at tweedledumber.cygnus.com)

	* put_svc_key.c (put_svc_key): new file, new function.
	* Makefile.in: add put_svc_key to SERVER_KRB_*.

Tue Jun 21 01:20:44 1994  John Gilmore  (gnu@cygnus.com)

	* kname_parse.c (kname_parse, isinst):  Allow periods in instance
	names.  Pull RCS crud.

Tue Jun 21 00:20:20 1994  John Gilmore  (gnu@cygnus.com)

	* Makefile.in (all):  First rule in file just calls all-really.
	(all-really):  Call $(ALL_WHAT) after it's been set.
	* memcache.c:  Remove typedef kludges to
	../../include/mt-windows.h.  Add Size.  WINDOWS -> _WINDOWS.	

Sat Jun 18 09:11:49 1994  John Gilmore  (gnu@cygnus.com)

	Make DES library independent of krb library.

	* unix_glue.c, mac_glue.c, win_glue.c:  Remove time-handling
	code to ../../lib/des/*_time.c.

Sat Jun 18 07:46:32 1994  John Gilmore  (gnu@cygnus.com)

	* send_to_kdc.c (send_recv):  Use SOCKET_NFDS as first arg to
	select().
	* macsock.c (gethostname):  Add incomplete stab at gethostname(),
	under #if 0.
	* cr_ciph.c, cr_tkt.c, decomp_tkt.c, g_ad_tkt.c, mac_store.c,
	mk_req.c, mk_safe.c: Lint.

Fri Jun 17 02:02:00 1994  John Gilmore  (gnu@cygnus.com)

	* DNR.c:  New file of MacTCP interface code.
	* macsock.c:  To avoid using StreamPtr in <macsock.h>, declare
	fStream as unsigned long.  Cast it whenever we need it.  This
	removes the need to include MacTCP header files in <macsock.h>.
	* macsock.c, mac_glue.c:  Eliminate inclusion of "mac_glue.h".
	* mac_glue.h:  Remove.

Thu Jun 16 17:30:04 1994  John Gilmore  (gnu@cygnus.com)

	* Makefile.in (unixmac):  New target.
	* g_in_tkt.c:  MPW complains about types without a cast.
	* mac_glue.c:  Pull networking code out into macsock.c.
	(krb_get_phost):  Pull this; use ordinary common version.
	(krb_start_session, krb_end_session):  Add.
	* mac_store.c (gUserName):  Add definition.
	Move static declarations above where they're needed.
	(krb_realmofhost):  Return null pointer, not KFAILURE.
	* macsock.c:  New file, implements socket abstraction for UDP.
	* memcache.c: Update header file handling.  FIXME, works on Mac,
	not on Windows too.
	* send_to_kdc.c (send_to_kdc):  Clean up error handling.
	Improve comments.  Add prototype for static function.
	* stime.c:  #define NEED_TIME_H.  Use proper type for time_t.

Wed Jun 15 16:35:52 1994  John Gilmore  (gnu@cygnus.com)

	* unix_glue.c (krb_start_session, krb_end_session):  Take
	args and ignore them, to match the prototypes.

Fri Jun 10 22:52:14 1994  John Gilmore  (gnu@cygnus.com)

	* g_in_tkt.c (swap_bytes):  Declare extern, not common.
	* mac_glue.h:  New (was called MacMachineDependencies.h in
	an earlier incarnation).
	* mac_glue.c:  Add code for time zone and Domain Name
	Service resolution.
	* mac_store.c:  Eliminate credential storage, leaving just
	configuration storage.  Initialize the store whenever a
	high-level routine is called and we haven't initialized.
	Return result from init_store, so callers can return
	KFAILURE if we can't read the config data.
	* mac_store.h:  Pull credential storage (now in memcache.h).
	* unix_glue.c (krb_start_session, krb_end_session,
	krb_get_default_user):  Provide dummy ones on Unix.

Thu Jun  9 00:47:59 1994  John Gilmore  (gnu@cygnus.com)

	* Makefile.in (SRCS, OBJS):  Move cr_death_pkt.c and kparse.c
	to SERVER_SRCS and SERVER_OBJS.
	(DELIVERABLES, INSTALL_DELIVERABLES):  Replace with ALL_WHAT
	and INSTALL_WHAT, which actually work.
	(all-unix):  Main rule for building on Unix now.
	(clean):  Consolidate `make clean' entries so it actually works.

Wed Jun  8 23:47:30 1994  John Gilmore  (gnu@cygnus.com)

	Further DLL support for Windows, plus, make previous
	changes work on Unix again.

	* memcache.c:  New file implements ticket cacheing in RAM.
	* memcache.h:  Interface for memcache.c.

	* win_glue.c: Remove stub interfaces for in_tkt, save_credentials,
	krb_save_credentials, krb_get_cred, dest_tkt, krb_get_tf_realm.

	* g_ad_tkt.c, g_in_tkt.c:  Rename save_credentials to
	krb_save_credentials.
	* save_creds.c (save_credentials):  Remove.
	* g_in_tkt.c (decrypt_tkt, krb_get_in_tkt_preauth):
	Declare and use new key_proc_type and decrypt_tkt_type
	typedefs for pointers to function prototypes.
	(krb_get_in_tkt):  Move after krb_get_in_tkt_preauth.
	* mk_preauth.c (krb_mk_preauth):  Declare and use key_proc_type.

	* dest_tkt.c (dest_tkt), in_tkt.c (in_tkt), g_tf_fname.c
	(krb_get_tf_fullname): If ticket cache selector is null, use
	default cache.  (Cache selector used to be the result of
	tkt_string; now tkt_string is called when it is null.)

	* send_to_kdc.c:  Replace all debug printf's with calls to
	the DEB macro, which is a no-op unless #define DEBUG.
	Insert #ifdef DEBUG where that is inconvenient.  (DLL libc
	doesn't seem to have printf.)  Lint.

	* g_krbrlm.c (krb_get_lrealm):  Declare as INTERFACE.
	Break out KRB_CONF into a static variable so we can debug it
	easier.
	
	* g_pw_in_tkt.c (krb_get_pw_in_tkt):  Declare as INTERFACE.
	Give an explicit error if the supplied password is null;
	this forces the caller to supply us one, rather than relying
	on a Kerberos library routine to interact with the user.  Lint.
	(passwd_to_key):  Make extern.  Don't call *_read_password.
	(krb_get_pw_in_tkt_preauth):  Give error for null password.	
	(placebo_read_password):  Add FIXME comment.

	* kerberos.def:  Use PASCAL calling sequence (uppercase names,
	no leading underlines) for interface functions.

	* in_tkt.c, g_pw_in_tkt.c, kparse.c:  Remove RCS crud.

Fri May 27 09:25:14 1994  John Gilmore  (gnu@cygnus.com)

	Initial Dynamic Link Library support for MS-Windows.

	* Makefile.in:  Move more files to only build on SERVER machines.
	(kerberos.dll, c-krbdll.rsp):  Build dynamic link library for
	MS-Windows.
	(kerberos.lib):  Build import library for MS-Windows.
	(all-windows, install-windows):  New targets for MS-Windows.

	* kerberos.def:  New file defines the Kerberos DLL interface.

	* winsock.def:  New file defines the WinSock DLL interface that
	we rely upon.  This file is from FTP:
	//sunsite.unc.edu/pub/micro/pc-stuff/ms-windows/winsock/winsock-1.1
	except that we made all the routine names uppercase, to match what
	MicroSoft C does when you declare an interface routine PASCAL
	(like all these routines).

	* err_txt.c (krb_get_err_table, krb_get_err_text):  New
	functions for DLL access to the error table.

	* g_admhst.c, g_cred.c, g_krbhst.c, g_phost.c, g_svc_in_tkt.c,
	kname_parse.c, mk_err.c, mk_priv.c, mk_req.c, mk_safe.c, rd_err.c,
	rd_priv.c, rd_req.c, rd_safe.c, realmofhost.c, recvauth.c,
	sendauth.c: Add INTERFACE declaration to definitions of functions
	that are exported via the DLL interface.

	* win_glue.c (win_time_gmt_unixsec):  Use static storage for
	_ftime() arg, since it takes a near pointer and can't point to
	stack storage when SS!=DS.
	(in_tkt, save_credentials, krb_save_credentials, krb_get_cred,
	dest_tkt, krb_get_tf_realm, krb_set_tkt_string,
	krb_ignore_ip_address):  Dummy routines for now.
	(LibMain, WEP):  No-op routines required for DLL initialization.
	(krb_start_session, krb_end_session): No-op routines required for
	Kerberos Mac interface compatability.

	* save_creds.c (krb_save_credentials):  Add new interface function
	to replace save_credentials, which isn't well enough named to
	export as part of the Kerberos interface.

	* kname_parse.c, kparse.c, rd_safe.c, send_to_kdc.c:  Move
	printf's under #ifdef DEBUG since printf is not usually available
	in MS-Windows.  Change exit()'s under "can't happen" conditions to
	return statements.

	* g_krbhst.c:  Clean up #ifdef'd braces so they match up.
	* sendauth.c:  Remove unused "extern int errno;".
	* kname_parse.c:  Remove unused extern of krb_err_txt.
	* mk_err.c, save_creds.c:  Remove RCS crud.
	* ren.msg:  Add rd_preauth.c and mk_preauth.c to DOS rename table.

Wed May 25 09:17:06 1994  D V Henkel-Wallace  (gumby@tweedledumb.cygnus.com)

	* g_pw_in_tkt.c: when read_password.c was inserted whole into this
	file, des.h and conf.h were #include'ed, which causes circularity
	problems.  #include's removed; they weren't needed anyway.

Tue May 24 00:55:30 1994  John Gilmore  (gnu@cygnus.com)

	* sendauth.c:  Break up into separately callable functions to
	avoid pushing binary data down a socket supposedly controlled
	by the kerberos library's caller.
	(krb_mk_auth):  New; builds a packet and returns it to you.
	(krb_net_rd_sendauth):  Reads a packet from the net.
	(krb_check_auth):  Checks an incoming response for validity.
	FIXME:  ATHENA_COMPAT code in here is now broken.  Remove it?
	FIXME:  Break up into separate files so that the non file
	descriptor part can be included on Mac.

	* g_admhst.c, mk_req.c:  Pull RCS crud.

	* mk_req.c:  Allow the realm argument to be defaulted with a null
	pointer.  This makes it suitable for building krb_sendauth
	messages directly.

	* tf_util.c (tf_init): If argument is null, call tkt_string to
	select a ticket cache.  See also ../../include/krb-sed.h, where
	the default argument was changed to be null.

	* send_to_kdc.c (MAX_HSTNM):  Eliminate only use of this obsolete
	define; use MAXHOSTNAMELEN which is set properly in each system.

	* fakeenv.c:  Update copyright notice (it's now public domain,
	freed by Cygnus Support, for whom the work was done for hire).

Mon May 23 00:19:46 1994  Mark Eichin  (eichin at tweedledumb.cygnus.com)

	* rd_svc_key.c (get_service_key): new function. Same as original
	read_service_key except that it takes argument kvno by reference,
	so the caller can figure out what key actually matched. Also
	defaults to KEYFILE if file argument is NULL (instead of just
	calling open with that value.) Also defaults to current realm if
	realm argument not passed in.
	(read_service_key): now calls get_service_key.

	* rd_safe.c (krb_rd_safe): check krb_ignore_ip_address before
	deciding to fail on an IP address check.
	(krb_rd_safe): remove "direction checking" code which doesn't
	actually help, and can interfere if IP addresses are optional.

	* rd_req.c (krb_rd_req): check krb_ignore_ip_address before
	deciding to fail on an IP address check; move test to end of
	function as well (to provide more information value in the
	RD_AP_BADD error return.)

	* rd_req.c: define (allocate) krb_ignore_ip_address.

	* rd_priv.c (krb_rd_priv): check global variable
	krb_ignore_ip_address before deciding to fail on an IP address
	check.
	(krb_rd_priv): remove "direction checking" code which doesn't
	actually help, and can interfere if IP addresses are optional.

	* netread.c (krb_net_read): use socket_read under VMS, assuming
	MultiNet. 

	* netwrite.c (krb_net_write): use socket_write under VMS, assuming
	MultiNet. 

	* mk_priv.c (krb_mk_priv): If private_msg_ver isn't set yet, use
	the expected version (KRB_PROT_VERSION) instead.

	* Makefile.in (SRCS, OBJS): added mk_preauth, rd_preauth.

	* g_in_tkt.c (krb_get_in_tkt_preauth): New function. Supports
	simple preauthentication by appending data to the initial packet.
	Demonstration hooks only.

	* g_svc_in_tkt.c (krb_get_svc_in_tkt_preauth): New function.
	Preauthentication support for initial tickets for servers.
	(krb_svc_init): New function. An interface to krb_get_svc_in_tkt
	that is provided by DEC's dss-kerberos, added here for
	compatibility.
	(krb_svc_init_preauth): preauthentication version of krb_svc_init.

	* g_pw_in_tkt.c	(krb_get_pw_in_tkt_preauth): New function.
	Higher level interface to g_in_tkt for users.

	* g_pw_in_tkt.c: in NOENCRYPTION section, pull in <sgtty.h>
	under __svr4__ so the ioctls work under Solaris.

Sat May 21 04:02:59 1994  John Gilmore  (gnu@cygnus.com)

	* Makefile.in (c-libkrb.${LIBEXT}):  Typos, do .o->.obj.
	* gethostname.c:  Simplify to call GETHOSTNAME macro.
	* stime.c:  Arg is *time, not time.  Oops.  Also simplify.
	* win_glue.c:  Support CONVERT_TIME_EPOCH and make it work
	for the odd epoch on MSC 7.0.
	(win_socket_initialize):  New routine implements SOCKET_INITIALIZE.
	(in_tkt, save_credentials, dest_tkt):  Stubs to link kinit with.

	First FAR crap in our clean sources (sigh).

	* win_glue.c (far_fputs):  Print a far string returned by WinSock.
	* ad_print.c:  Handle FAR pointer from inet_ntoa.
	* g_phost.c:  Handle FAR pointer returned by gethostby*.
	
	* send_to_kdc.c: Convert to WinSock plus local macros that make
	compatability easier.  Initialize and terminate WinSock access
	each time we are called.  Handle FAR pointer from get*by* and
	inet_ntoa.  Bind the datagram socket before using it, to get
	beyond a bug in FTP Software's WinSock libraries.  Improve debug
	messages.

Thu May 19 22:57:13 1994  John Gilmore  (gnu@cygnus.com)

	More Windows support.

	* Makefile.in (LIBEXT):  Use everywhere.
	(SERVER_KRB_{SRCS,OBJS}):  Rename from SERVERSIDE*.
	(ARCHIVEARGS):  Implement MSC LIB support.
	(####):  Move insertion point of host-configuration fragments
	down so they can override the various Makefile macros.
	(libkrb.$(LIBEXT)):  Avoid keeping a .bak file.  Use ARCHIVEARGS.
	(unixdos):  New target for things that have to run on Unix
	after configuring for DOS.  (FIXME, make these work on DOS.)
	(c-libkrb.$(LIBEXT)):  Build control file for MSC.  This
	currently must run on Unix (FIXME).

	* stime.c:  Use CONVERT_TIME_EPOCH.

Sat May 14 00:49:11 1994  John Gilmore  (gnu@cygnus.com)

	More Macintosh merging.

	* Makefile.in (CACHESRCS, CACHEOBJS, REALMDBSRCS, REALMDBOBJS,
	SERVERSIDESRCS, SERVERSIDEOBJS):  Update the lists of files that
	belong to each category.
	* unix-glue.c, mac-glue.c, win-glue.c:  Rename to unix_glue.c,
	mac_glue.c, win_glue.c.
	* g_ad_tkt.c:  Improve comments on cross-realm support.
	* g_phost.c:  Remove RCS crud.
	* store.c, store.h:  Rename to mac_store.c, mac_store.h.  Insert
	all the Kerberos glue routines needed to talk to the Cygnus code.

Fri May 13 17:40:02 1994  John Gilmore  (gnu@cygnus.com)

	* Makefile.in (SERVERSIDESRCS, SERVERSIDEOBJS):  Create
	as lists of lib/krb files only used on servers, so they can
	be avoided when on client-only machines.
	(CACHESRCS, CACHEOBJS):  Put all the rightful files in there.
	* realmofhost.c:  Pull <sys/param.h> and default MAXHOSTNAMELEN.
	* dest_tkt.c, realmofhost.c, tf_shm.c:  Remove RCS crud.
	* rd_safe.c, tf_shm.c:  Remove errno declaration, <errno.h>, etc.
	* mk_priv.c:  Comment changes.
	* g_ad_tkt.c:  Remove obsolete defn of <sys/time.h>.

Fri May 13 12:17:32 1994  John Gilmore  (gnu@cygnus.com)

	Macintosh changes.

	* store.h, store.c:  Ticket storage in memory on the Mac.
	* mac-glue.c:  New file, deals with OS and time interface.
	* Makefile.in:  Pull tf_util.[co] out into CACHESRCS and
	CACHEOBJS, so it can be excluded on Mac and Windows.
	* g_in_tkt.c:  Don't declare signed difference t_diff as unsigned!
	* g_ad_tkt.c, rd_safe.c, rd_req.c, rd_priv.c, mk_safe.c, mk_req.c:
	Remove <sys/time.h>.  Use TIME_GMT_UNIXSEC and clean up datatype
	issues around clock-skew/ticket-replay checking.  Remove __i960__
	conditionals, which should be handled by changing CLOCK_SKEW in
	960-specific config files.
	* mk_priv.c:  Rename TIME_GMT_UNIXSEC_MS to TIME_GMT_UNIXSEC_US.
	* setenv.c:  Remove <sys/types.h>.
	* rd_priv.c, mk_safe.c:  Remove <errno.h>, and decls of errno and
	errmsg.
	* rd_req.c, stime.c, mk_safe.c:  Remove RCS crud.

Fri May 13 02:02:56 1994  John Gilmore  (gnu@cygnus.com)

	* Makefile.in:  Support glue files for each major architecture
	(Unix, mac, windows).  Replace {} with () for DOS NMAKE.
	Build krb_err.h without `make depend'.  Remove -DBSD42 since it
	is no longer used.
	* unix-glue.c:  New file, interfaces to Unix gettimeofday.
	* win-glue.c:  New file, interfaces to Windows _ftime.
	* g_in_tkt.c, mk_priv.c:  Pull <sys/time.h>, use new macro interface
	TIME_GMT_UNIXSEC to get the time.
	* gethostname.c:  Pull BSD42.  Insert FIXME comments about the
	poor DOS support.
	* mk_priv.c:  Pull <errno.h>, errno, and errmsg as unused.

	* ad_print.c:  Pull <arpa/inet.h>, which is now in <krb.h>.
	* decomp_tkt.c:  Add file name to title comments.
	* fakeenv.c:  Pull <sys/types.h> and <stdio.h>.
	* g_phost.c:  Replace <netdb.h> and <osconf.h> with <krb.h>.
	* ren.msg:  Remove get_request.c (g_request.c), now gone.
	* send_to_kdc.c:  Pull <netdb.h>.
	* setenv.c:  Add "conf.h" for non-cmd-line configuration.

Sun May  8 23:34:16 1994  John Gilmore  (gnu@cygnus.com)

	Include-file straightening:  Remove Unix include
	files from as many routines as possible -- particularly
	<sys/types.h> and network include files.

	* ad_print.c:  Use DEFINE_SOCKADDR to get struct sockaddr_in.
	Lint.  Pull RCS crud.
	* cr_err_repl.c, tf_shm.c, tf_util.c, tkt_string.c:  Pull
	<sys/types.h>.
	* cr_tkt.c, decomp_tkt.c:  Pull <stdio.h>.
	* dest_tkt.c, in_tkt.c, mk_err.c:  Pull <sys/types.h>
	* g_ad_tkt.c:  Pull <sys/types.h>, <errno.h>, RCS crud.
	* g_cred.c:  Pull RCS crud, add <string.h>.
	* g_in_tkt.c:  Pull <sys/types.h>, <errno.h>, <stdio.h>, RCS crud.
	* g_tf_fname.c:  Lint, pull RCS crud.
	* kuserok.c:  <pull <sys/types.h> and <sys/socket.h>.
	* rd_err.c:  Pull <stdio.h>, <errno.h>, <sys/types.h>, <sys/times.h>.
	* mk_priv.c, mk_safe.c, rd_err.c, rd_priv.c, rd_safe.c,
	recvauth.c, send_to_kdc.c, sendauth.c:  Use DEFINE_SOCKADDR to get
	struct sockaddr_in.
	* cr_tkt.c, debug.c, mk_safe.c, rd_err.c, rd_safe.c, recvauth.c,
	sendauth.c:  Pull RCS crud. 
	* rd_safe.c, sendauth.c:  Lint.
	* strcasecmp.c:  Remove <sys/types.h> and change the few
	occurrances of u_foo types to `unsigned foo'.  Pull SCCS crud(!).

Sun May  8 19:24:08 1994  John Gilmore  (gnu@cygnus.com)

	* add_tkt.c, ext_tkt.c:  Remove, unused.  As its comments say:
	This routine is now obsolete.  It used to be possible to request
	more than one ticket at a time from the authentication server, and
	it looks like this routine was used by the server to package the
	tickets to be returned to the client.

	* g_request.c:  Remove, unused.  Its comments:
	This procedure is obsolete.  It is used in the kerberos_slave
	code for Version 3 tickets.

	* getopt.c:  Remove, unused.
	* Makefile.in:  Remove unused files.

Sat May  7 13:44:20 1994  John Gilmore  (gnu@cygnus.com)

	* krbglue.c:  Remove, unused.  Mark Eichin says:
	krbglue, if I recall correctly, was backwards compatibility code so
	that programs that were written with V3 could be relinked with V4
	without recompiling. The Zephyr code used it at one point, though I
	doubt it does anymore. It's probably sufficient to note that in the
	cvs log when you delete it.

	* krbglue.c, recvauth.c, sendauth.c:  Lint.

Fri May  6 21:11:10 1994  John Gilmore  (gnu@cygnus.com)

	* ren-cyg.sh, ren-pc.sh, ren-pl10.sh, ren.msg.sh, ren2dos,
	ren2long.sh sed-cyg.sh, ren-pc.bat, sed-pc.sh:  Update for final
	DOS renaming.

Fri May  6 18:32:11 1994  John Gilmore  (gnu@cygnus.com)

	* rd_priv.c, mk_priv.c, rd_safe.c, mk_safe.c:  Rename include
	file "lsb_addr_comp.h" to "lsb_addr_cmp.h" for DOS/SYSV.

Fri May  6 02:10:50 1994  John Gilmore  (gnu@cygnus.com)

	* krbglue.c: Move Kerberos function prototypes to ../include/krb.h.
	Yank RCS.  Lint.
	* mk_priv.c (krb_mk_priv), rd_priv.c (krb_rd_priv):  Lint.  Yank RCS.

Thu May  5 12:49:34 1994  John Gilmore  (gnu@cygnus.com)

	* decomp_tkt.c: Remove need for <sys/file.h> under KRB_CRYPT_DEBUG
	by using stdio.  Call krb_log, not log.  Lint.  Remove RCS ID's.

	* g_tf_realm.c:  Lint.

Tue Apr 26 20:54:29 1994  John Gilmore  (gnu@tweedledumb.cygnus.com)

	Massive file renaming for DOS compatability.

	* ren.msg, ren-cyg.sh, sed-cyg.sh:  New files.

	* Imakefile, Makefile.in:  File names edited throughout.

	* add_ticket.c, cr_auth_reply.c, cr_err_reply.c, create_ciph.c,
	create_ticket.c, debug_decl.c, decomp_ticket.c, extract_tkt.c,
	get_ad_tkt.c, get_admhst.c, get_cred.c, get_in_tkt.c, get_krbhst.c,
	get_krbrlm.c, get_phost.c, get_pw_tkt.c, get_request.c, get_svc_in.c,
	get_tf_fname.c, get_tf_realm.c, getrealm.c, k_gethostname.c,
	krb_err_txt.c, krb_get_in.c, read_svc_key.c, util.c:  Renamed.

	* ad_print.c, add_tkt.c, cr_auth_repl.c, cr_ciph.c, cr_err_repl.c,
	cr_tkt.c, debug.c, decomp_tkt.c, err_txt.c, ext_tkt.c, g_ad_tkt.c,
	g_admhst.c, g_cred.c, g_in_tkt.c, g_krbhst.c, g_krbrlm.c,
	g_phost.c, g_pw_in_tkt.c, g_pw_tkt.c, g_request.c, g_svc_in_tkt.c,
	g_tf_fname.c, g_tf_realm.c, gethostname.c, rd_svc_key.c,
	realmofhost.c:  Same files, renamed.

Sun Jan 30 17:28:57 1994  Ken Raeburn  (raeburn@cujo.cygnus.com)

	* getrealm.c (krb_realmofhost): Rearrange loop so that strcasecmp
	is called only once for domains listed in krb.conf, and exiting
	function is cleaner.

