2003-03-03  Tom Yu  <tlyu@mit.edu>

	* configure.in: Delete unused ADD_DEF, probably left over from
	appl/bsd.

2003-01-10  Ken Raeburn  <raeburn@mit.edu>

	* configure.in: Don't explicitly invoke AC_PROG_INSTALL,
	AC_PROG_ARCHIVE, AC_PROG_RANLIB.

	* Makefile.in: Add AC_SUBST_FILE marker for lib_frag and libobj_frag.

2002-12-06  Ezra Peisach  <epeisach@bu.edu>

	* configure.in: Quote the argument to AC_CHECK_HEADER. Autoconf
	2.57 was having problems.

2002-08-29  Ken Raeburn  <raeburn@mit.edu>

	* Makefile.in: Revert $(S)=>/ change, for Windows support.

	* pty_err.et: Add final "end" statement.

2002-08-23  Ken Raeburn  <raeburn@mit.edu>

	* Makefile.in: Change $(S)=>/ and $(U)=>.. globally.

2002-07-12  Ken Raeburn  <raeburn@mit.edu>

	* Makefile.in (install): Don't install libpty.h.
	* configure.in: Always build static library only.

2002-06-12  Ken Raeburn  <raeburn@mit.edu>

	* cleanup.c, getpty.c, init.c, init_slave.c, logwtmp.c,
	open_ctty.c, open_slave.c, pty_paranoia.c, sane_hostname.c,
	update_utmp.c, update_wtmp.c, vhangup.c, void_assoc.c: Include
	"com_err.h" instead of <com_err.h>.

	* pty-int.h: Don't include syslog.h.

2002-05-24  Ken Raeburn  <raeburn@mit.edu>

	* sane_hostname.c (pty_make_sane_hostname): Always initialize
	"ai".

2002-03-26  Ken Raeburn  <raeburn@mit.edu>

	* sane_hostname.c: Include fake-addrinfo.h, not fake-addrinfo.c.
	(FAI_PREFIX): Delete.

2002-02-19  Ken Raeburn  <raeburn@mit.edu>

	* Makefile.in (LIBMINOR): Bump due to change in internals.  (Tom's
	change from 1.2.x branch.)

2001-12-03  Sam Hartman  <hartmans@mit.edu>

	* README: s-pty_init_ets/pty_init/

2001-11-28  Tom Yu  <tlyu@mit.edu>

	* update_utmp.c (PTY_GETUTXENT): Fix typo.  Thanks to Shawn
	Stepper. [fixes krb5-build/1020]

2001-11-19  Tom Yu  <tlyu@mit.edu>

	* update_utmp.c (pty_update_utmp): Patch from Garry Zacheiss to
	kludge around cases where we need to use more than 2 characters of
	LINE in order to avoid conflicts in UT_ID.

2001-10-18  Ezra Peisach  <epeisach@mit.edu>

	* sane_hostname.c (pty_make_sane_hostname): Do not declare addrbuf
	twice, shadowing the first declaration.


2001-10-02  Ezra Peisach  <epeisach@mit.edu>

	* Makefile.in (includes): Depend on
	$(BUILDTOP)/include/krb5/autoconf.h. Automatic dependencies do not
	work on systems in which shared libraries are build without static
	ones.

2001-09-11  Tom Yu  <tlyu@mit.edu>

	* configure.in: Cosmetic fix in utmpx.ut_exit check.

Wed Sep  5 20:08:21 2001  Ezra Peisach  <epeisach@mit.edu>

	* Makefile.in ($(BUILDTOP)/include/krb5/autoconf.h): Add rules to
 	build include/krb5/autoconf.h - this file is wiped out during a
 	make clean and sane_hostname.c depends on it.

2001-08-29  Ken Raeburn  <raeburn@mit.edu>

	* sane_hostname.c: Include socket-utils.h and fake-addrinfo.c.
	(FAI_PREFIX): Define to krb5int_pty.
	(sockaddrlen, do_ntoa): Deleted.
	(pty_make_sane_hostname): Use socklen instead of sockaddrlen.
	Delete support for not having getnameinfo.  Move code for do_ntoa
	inline.

2001-07-02  Tom Yu  <tlyu@mit.edu>

	* update_utmp.c (pty_update_utmp): Remember to chop off leading
	"/dev/" for the non-sysV case.  Handle lseek() returning non-zero
	yet non-negative values (it usually does... :-), so that we can
	actually write somewhere not at the beginning of the utmp file if
	necessary.

2001-06-28  Ken Raeburn  <raeburn@mit.edu>

	* update_utmp.c (pty_update_utmp): Don't copy host if it's a null
	pointer.

	* dump-utmp.c (print_ut): Use size of ut_name field, not ut_user,
	which may not exist, for width when printing ut_name field value.
	Specify width when printing hostname, it may be unterminated.
	(main): Move utp and utxp declarations closer to their usages, and
	make both conditionalized so they're not declared if they're not
	used.

2001-06-21  Ezra Peisach  <epeisach@mit.edu>

	* libpty.h: Change variable line in prototype to tty_line to
	prevent shadowing.

2001-06-11  Ezra Peisach  <epeisach@mit.edu>

	* pty-int.h: Provide revoke() prototype if system headers lacking. 

	* logwtmp.c: Provide logwtmp() prototype if needed. 

	* configure.in: Check for system provided getutmp(), logwtmp() and
	revoke() prototypes.  Check for util.h, libutil.h.

	* update_wtmp.c: Provide prototype for getutmp() if needed.

2001-05-15  Tom Yu  <tlyu@mit.edu>

	* getpty.c: Make pty_getpty() into ptyint_getpty_ext(), which has
	an extra argument that determines whether to call grantpt() and
	unlockpt() on systems that support it.  The new pty_getpty() will
	simply call the extended version.  This is to support some
	wackiness needed by pty_paranoia.c tests.

	* pty-int.h: Add prototype for ptyint_getpty_ext().

	* pty_paranoia.c: Add rant about ptys and quirks therein.  Needs
	to be updated somewhat.  Add some more paranoia for the case where
	we actually succeed in opening the slave of a closed master and
	then succeed in opening the same master.  This program will get
	rewritten at some point to actually see what things result in EOFs
	and under what conditions data will actually get passed between
	master and slave.

2001-05-10  Tom Yu  <tlyu@mit.edu>

	* pty_paranoia.c: New file; do many paranoid checks about ctty
	handling by the pty drivers.

	* Makefile.in: Add rules for pty_paranoia and check-paranoia,
	which runs pty_paranoia.

	* configure.in: Define REVOKE_NEEDS_OPEN for Tru64.  Add support
	for program building and run flags for the sake of pty_paranoia.

	* open_slave.c: Fix somewhat; AIX doesn't like opening the ctty
	twice, so only do initial open if we special-case it in
	configure.in, e.g. for Tru64.

2001-05-08  Tom Yu  <tlyu@mit.edu>

	* logwtmp.c: Delete code under "#if 0".  Fix reversed test for
	loggingin.  Don't forget to set the ut_tv or ut_time for the
	entry.

	* update_utmp.c: Update rant about Tru64; remove fetching of
	ut_user from old entry.  The existence of the old ut_user in the
	logout entry in wtmp was confusing last.

	* cleanup.c: Call update_utmp() with the correct pid to assist in
	finding the old utmp entry.

	* open_ctty.c: Reformat somewhat and revise comment.

	* open_slave.c: Rework significantly.  Primarily, keep a fd open
	to the slave if we need to reopen the slave device following
	vhangup() or revoke(), to accommodate various OS quirks.

	* update_utmp.c: Revise history section somewhat to document more
	HP-UX brokenness.  Search via ut_pid before searching via
	ut_line.  Copy stuff around because entuxent() will clobber some
	things.

	* void_assoc.c: Revise comment and reformat somewhat.

2001-05-04  Ezra Peisach  <epeisach@mit.edu>

	* open_slave.c (pty_open_slave): If revoke() present on system but
	VHANG_FIRST is not defined, declare local variable.

2001-05-04  Tom Yu  <tlyu@mit.edu>

	* dump-utmp.c: Fix some off-by-one errors.  Handle cases where we
	have utmpname() but not utmpname().

	* pty-int.h: Fix typo; VHANG_first -> VHANG_FIRST.

	* open_slave.c (pty_open_slave): Add workaround for Tru64 v5.0,
	since its revoke() will fail if the slave isn't open already.

2001-05-03  Ezra Peisach  <epeisach@rna.mit.edu>

	* sane_hostname.c (pty_make_sane_hostname): Preserve const
	property of incomming parameter in casts.

2001-05-03  Ezra Peisach  <epeisach@mit.edu>

	* cleanup.c (pty_cleanup): Delcare local variable only if
	VHANG_LAST defined.

	* logwtmp.c (pty_logwtmp): Only declare local variables if
	logwtmp() not available on system.

	* sane_hostname.c (sockaddrlen): Only define static function if
	HAVE_GETNAMEINFO defined. (pty_make_sane_hostname) Declare goto
	target only if code compiled in.

2001-05-01  Ken Raeburn  <raeburn@mit.edu>

	* update_utmp.c (pty_update_utmp): Fix typo (OWRONLY ->
	O_WRONLY).

2001-05-01  Ezra Peisach  <epeisach@mit.edu>

	* update_wtmp.c (ptyint_update_wtmpx): Add missing semi-colon in
 	code path if PTY_UTMP_E_EXIT and PTY_UTMPX_E_EXIT exist.

2001-04-30  Tom Yu  <tlyu@mit.edu>

	* configure.in: Fix some quoting of shell variables when passing
	to "test".  Reorder some logic in consistency checks to validate
	cache variables against "yes" to account for possible empty or
	nonexistent values.

	* pty-int.h: Fix conditional prototype of update_wtmp().

	* update_wtmp.c: Fix conditional compilation of update_wtmp() to
	cover the case where we have setutxent() but don't have updwtmpx()
	and WTMPX_FILE, as is the case on some Linux installations.

2001-04-27  Tom Yu  <tlyu@mit.edu>

	* configure.in(K5_CHECK_UT_MEMBER): Fix typo in previous; make
	sure to include the correct header when checking structure
	members.

	* configure.in: Many changes to support the rewriting of the utmp
	pieces of libpty.  Do a large amount of checking for consistency
	of various utmp and utmpx APIs as currently understood.  See rant
	in update_utmp.c.

	* dump-utmp.c: Rewrite; now has capability to use utmp{,x}name()
	to extract entries from utmp and utmpx files.  Adjusts field
	widths when printing as appropriate.

	* libpty.h: Update call signature for update_utmp() and logwtmp();
	make prototypes unconditional.

	* logwtmp.c: Rewrite.  Use pututline() or pututxline() API
	whenever possible.

	* pty-int.h: Update call signatures for update_wtmp{,x}(); make
	prototypes unconditional.

	* sane_hostname.c: Use the autoconf-correct macro names.

	* update_utmp.c: Rewrite.  Basically, use functions from the
	pututline() or pututxline() API whenever possible, to avoid
	lossage.  Inserted large rant about the conjectured history of BSD
	utmp, sysV utmp, and utmpx, as well as documentation about some
	known quirks.

	* update_wtmp.c: Rewrite.  Add new function ptyint_logwtmpx() that
	takes a utmpx rather than a utmp, so it can fail to lose data
	converting to and from utmp.

2001-01-12  Tom Yu  <tlyu@mit.edu>

	* sane_hostname.c: Switch off of KRB5_USE_INET6 instead of
	AF_INET6, which may be defined without a corresponding struct
	sockaddr_in6.

2000-12-06  Ken Raeburn  <raeburn@mit.edu>

	* sane_hostname.c (pty_make_sane_hostname, do_ntoa): Pass address
	as const sockaddr pointer.
	* libpty.h (pty_make_sane_hostname): Update prototype.

	* sane_hostname.c (sockaddrlen, downcase): New function.
	(do_ntoa, pty_make_sane_hostname): Reimplement using getnameinfo
	and getaddrinfo if available.
	* configure.in: Check for IPv6 support.

2000-11-01  Ezra Peisach  <epeisach@mit.edu>

	* configure.in: Quote macro use inside AC_CHECK_LIB. Change
	AC_FUNC_CHECK to AC_CHECK_FUNC, AC_HAVE_FUNCS to AC_CHECK_FUNCS
	and AC_HEADER_CHECK to AC_CHECK_HEADER..

2000-06-30  Ezra Peisach  <epeisach@mit.edu>

	* pty-int.h: Add getutmpx() prototype if needed.

	* configure.in: If getutmpx() exists on the system, test if a
	prototype is provided by the system headers.

2000-06-28  Ezra Peisach  <epeisach@mit.edu>

	* getpty.c (pty_getpty): More conditionalizing variable defintion
	based on OS features.

	* cleanup.c (pty_cleanup): Add parenthesis about assignment in
	conditional (gcc suggestion).

	* pty-int.h: Include pty.h if it exists (for openpty prototype
	under Linux).

	* configure.in: Check for pty.h

2000-06-26  Ezra Peisach  <epeisach@mit.edu>

	* libpty.h: If SOCK_DGRAM is not defined, provide a definition for
	struct sockaddr_in to satisfy prototype. (based on similar 
	code in k5-int.h).

	* update_wtmp.c (ptyint_update_wtmp), update_utmp.c
	(pty_update_utmp), open_slave.c (pty_open_slave), getpty.c
	(pty_getpty): conditionalize definition of variables based on code
	paths that are included.

	

1999-10-26  Tom Yu  <tlyu@mit.edu>

	* configure.in: Check for alpha*-dec-osf* instead of
	alpha-dec-osf*.

1999-10-26  Wilfredo Sanchez  <tritan@mit.edu>

	* Makefile.in: Clean up usage of CFLAGS, CPPFLAGS, DEFS, DEFINES,
	LOCAL_INCLUDES such that one can override CFLAGS from the command
	line without losing CPP search patchs and defines. Some associated
	Makefile cleanup.

1999-08-03  Ken Raeburn  <raeburn@mit.edu>

	* update_utmp.c (pty_update_utmp): Use "co" instead of "cons" for
	console line on Solaris.  Patch from Larry Schwimmer
	(schwim@whatmore.Stanford.EDU).

	* Makefile.in (dump-utmp): Add a rule for building, never
	automatically done.
	(dump-utmp.o): Depends on dump-utmp.c.

	Updates from Cygnus KerbNet:

	* dump-utmp.c (ut_typename): Only define if
	HAVE_STRUCT_UTMP_UT_TYPE is defined.
	(main): Dump more info, and conditionalize it better.

	* dump-utmp.c (ctime): Declare, to prevent crashes on Alpha.

	* dump-utmp.c (UTMPX): Define if not defined but HAVE_UTMPX_H is
	defined.
	(ut_typename): Return shorter forms for some symbols.
	(main): Require `-x' flag for [uw]tmpx file instead of guessing
	from the name.  Reject unknown `-' arguments.  Print a message if
	an error occurs while reading from utmpx file.  Break up output
	statements into smaller pieces.  Conditionalize output of some
	utmp fields on whether those fields are present.  Print out exit
	status fields and timestamp.

Fri Apr 23 23:13:57 1999  Tom Yu  <tlyu@mit.edu>

	* update_utmp.c (pty_update_utmp): utx.ut_pid is a pid_t, and
	ent.ut_pid is sometimes a short; accordingly, use pid rather than
	ent.ut_pid, which might have gotten truncated.  This fixes an Irix
	problem found by <rbasch@mit.edu>.

1999-04-14    <tytso@rsts-11.mit.edu>

	* update_wtmp.c: Don't use updwtmpx() even if it exists for glibc
		2.1, since it's the same as updwtmp(), and glibc doesn't
		define PATH_WTMPX.  updwtmpx() is not part of the XPG
		standard anyway.  (Needed for RedHat 6.0.)

Sun Mar 28 17:50:57 1999  Tom Yu  <tlyu@mit.edu>

	* update_wtmp.c: Define WTMPX_FILE to be _PATH_WTMPX in case we're
	on a system that cleans up the namespace that way.

Wed Feb 17 19:47:36 1999  Tom Yu  <tlyu@mit.edu>

	* sane_hostname.c (pty_make_sane_hostname): Remove unused
	"char *scratch".

Tue Feb 16 20:18:40 1999  Tom Yu  <tlyu@mit.edu>

	* sane_hostname.c: Re-order so that pty-int.h precedes libpty.h to
	prevent conflicting definitions of struct sockaddr_in

Thu Feb 11 22:24:03 1999  Tom Yu  <tlyu@mit.edu>

	* sane_hostname.c: Force maxlen to be 16 if it's less than 16,
	since otherwise a numeric IP address won't fit.

	* Makefile.in: Add sane_hostname.{o,c}; bump minor version.

	* libpty.h: Add prototype for make_sane_hostname.

	* sane_hostname.c: New file; add function to "sanitize" hostname
	for logging purposes.

1999-01-27  Theodore Ts'o  <tytso@rsts-11.mit.edu>

	* configure.in: Remove test CHECK_WAIT_TYPE since nothing is using
		the results of that test (WAIT_USES_INT).

1998-08-16    <hartmans@fundsxpress.com>

	* Makefile.in (SHLIB_EXPDEPS): Depend on lib_comerr

1998-07-05    <hartmans@fundsxpress.com>

	* update_utmp.c (pty_update_utmp): If the ut_exit differs test
	indicates the structures differ, and we don't have a special case,
	do nothing rather than trying to copy the field.  It's not worth
	breaking the build over.

Mon Apr  6 19:35:33 1998  Tom Yu  <tlyu@voltage-multiplier.mit.edu>

	* update_utmp.c (pty_update_utmp): Don't record LOGIN_PROCESS
	entries, as they confuse last on some systems. [pty/569]

Thu Mar 12 18:09:25 1998  Tom Yu  <tlyu@mit.edu>

	* update_utmp.c (pty_update_utmp): Fix bogus entry of
	PTY_LOGIN_PROCESS types on BSD-ish systems. [pty/531]

Wed Feb 18 16:33:58 1998  Tom Yu  <tlyu@mit.edu>

	* Makefile.in: Remove trailing slash from thisconfigdir.  Fix up
	BUILDTOP for new conventions.

Mon Feb  2 16:18:08 1998  Theodore Ts'o  <tytso@rsts-11.mit.edu>

	* Makefile.in: Define BUILDTOP and thisconfigdir in the Makefile

	* configure.in, Makefile.in: Remove CopySrcHeader and CopyHeader 
		from configure.in and move equivalent functionality to
		Makefile.in 

Sun Dec  7 00:05:28 1997  Tom Yu  <tlyu@mit.edu>

	* getpty.c (pty_getpty): Fix goof in previous, which introduced
	another fencepost error.

Thu Dec  4 21:48:12 1997  Tom Yu  <tlyu@mit.edu>

	* getpty.c (pty_getpty): Fix checks on string lengths to account
	for terminating nul character.  Some whitespace fixups.

Wed Dec  3 17:16:44 1997  Tom Yu  <tlyu@mit.edu>

	* pty_err.et: Add PTY_OPEN_SLAVE_TOOSHORT error code.

	* open_slave.c (pty_open_slave): Check to ensure that the slave
	name is not NULL or zero-length.

Tue Oct 28 13:28:54 1997  Ezra Peisach  <epeisach@.mit.edu>

	* pty-int.h: Do not prototype initialize_pty_error_table as
	        pty-err.h does as well.

Fri Oct 24 09:12:43 1997  Ezra Peisach  <epeisach@mit.edu>

	* Makefile.in (CFILES): Add $(srcdir).

Wed Oct  1 04:53:30 1997  Tom Yu  <tlyu@mit.edu>

	* configure.in: Default to a long rather than an int for a time_t
	for paranoia reasons.

Tue Jun  3 23:05:07 1997  Theodore Y. Ts'o  <tytso@mit.edu>

	* getpty.c (pty_getpty): Remove erroneous space from the HPUX open().

Fri Apr 25 19:14:48 1997  Theodore Y. Ts'o  <tytso@mit.edu>

	* configure.in: Check for openpty() in -lutil.  It's there on
		FreeBSD and BSDI systems.

Fri Feb 21 18:25:47 1997  Sam Hartman  <hartmans@tertius.mit.edu>

	* pty-int.h: No longer prototype error table init function.

Thu Jan 16 18:47:12 1997  Tom Yu  <tlyu@mit.edu>

	* Makefile.in: Cause "clean" to dtrt.
	
	* configure.in: Punt spurious call to KRB5_LIB_PARAMS.

Sun Dec 29 21:32:41 1996  Tom Yu  <tlyu@mit.edu>

	* Makefile.in: Update to set STLIBOBJS instead of LIBSRCS; also
	clean up a little bit.

Fri Dec 27 17:09:46 1996  Tom Yu  <tlyu@mit.edu>

	* Makefile.in: Fix to use OBJS.ST rather than ./OBJS.ST.

	* Makefile.in:
	* configure.in: Changes to use new library build system.

Thu Dec  5 22:43:35 1996  Theodore Y. Ts'o  <tytso@mit.edu>

	* update_utmp.c (pty_update_utmp): Apply platform specific patch
		so that HPUX works.  (Kludge for 1.0 release) [PR#40]

Fri Nov 22 11:52:52 1996  Sam Hartman  <hartmans@mit.edu>

	* configure.in : Make sure time_t is define [203]
	* update_wtmp.c (ptyint_update_wtmp): Use time_t for call to time(2). [203]

Fri Nov 15 08:33:54 1996  Ezra Peisach  <epeisach@mit.edu>

	* update_utmp.c (pty_update_utmp): Handle case where utmp uses
		ut_exit.e_exit and utmpx uses ut_exit.ut_exit.

	* configure.in (UT_EXIT_STRUCTURE_DIFFER): If utmpx.h exists, and
		getutmpx does not exist then test if the ut_exit part of
		the utmp/utmpx structure is a structure and if their types
		differ. (e_exit vs. ut_exit).

Fri Nov  8 17:45:42 1996  Theodore Y. Ts'o  <tytso@mit.edu>

	* update_utmp.c (pty_update_utmp): Add code which attempts to
		compensate for systems that don't have getutmpx()

	* configure.in: Check for getutmpx().  Replace calls to
		AC_FUNC_CHECK with AC_HAVE_FUNCS().

Thu Jun 13 22:14:24 1996  Tom Yu  <tlyu@voltage-multiplier.mit.edu>

	* configure.in: remove ref to ET_RULES


Thu Jun 13 14:12:16 1996  Sam Hartman  <hartmans@mit.edu>

	* update_wtmp.c (ptyint_update_wtmp): Only update wtmpx if we have
 	updwtmpx.  This probably should be more general, but I'm not
 	really sure of HP caviats.

	* configure.in :  check for updwtmpx

	* getpty.c (pty_getpty): Actually check for 256 ptys on SunOS and
 	other old-style systems.
Tue Apr 16 22:06:36 1996  Ken Raeburn  <raeburn@cygnus.com>

	* dump-utmp.c: New file.  Not automatically used by anything, but
	may be useful for examining utmp/wtmp files when comparing
	behavior against system software.

	Sun Mar 31 02:04:28 1996  Ken Raeburn  <raeburn@cygnus.com>

	* update_utmp.c (pty_update_utmp): Always use id "cons" for
	console.  For HP-UX, omit "kl" prefix.  Reindent for readability.
	* update_wtmp.c (ptyint_update_wtmp): For HP-UX, copy ut_id and
	ut_type from input utmp structure.  Reindent for readability.

	Wed Mar 27 21:14:33 1996  Marc Horowitz <marc@mit.edu>

	* init_slave.c (pty_initialize_slave): Spurious signal stuff
		which did nothing deleted.

Tue Apr 16 13:43:43 1996  Sam Hartman  <hartmans@mit.edu>

	* configure.in :  Don't use streams on HPUX.

	* getpty.c (pty_getpty): Check /dev/ptym/clone for HPUX10, only
 	try /dev/ptmx if HAVE_STREAMS defined so we can bipass for HPUX9.

Sun Apr 14 00:36:33 1996  Sam Hartman  <hartmans@mit.edu>

	* pty-int.h: Don't include sys/wait.h here.

	* configure.in : Check for waitpid.

Sat Apr 13 18:58:43 1996  Sam Hartman  <hartmans@mit.edu>

	* cleanup.c (pty_cleanup): If we are doing a vhangup, then fork
 	and dissociate on hangup.  This makes the HP happy, because there
 	is no way to get rid of a controlling terminal besides setsid() on
 	the HP.

Sun Mar 24 19:59:14 1996  Sam Hartman  <hartmans@tertius.mit.edu>

	* configure.in : Do streams handling by deciding what modules to
 	push for each system.

	* init_slave.c (pty_initialize_slave): Better abstraction for
 	dealing with what modules get pushed on what streams system.
  	There is a list of modules controlled on a module-by-module basis
 	by configure.in, and the modules included in that list are pushed.

	* void_assoc.c: Duplicate comment from open_ctty.c explaining that
 	it's OK to call void_association twice, and giving the caviats
 	about setsid.

	* open_ctty.c (pty_open_ctty): Remove test to make sure /dev/tty
 	worked, so we can push the streams for the HP.

	* open_slave.c (pty_open_slave): Test to see if /dev/tty works
 	only after calling pty_initialize_slave.

Sat Mar 23 15:24:38 1996  Sam Hartman  <hartmans@tertius.mit.edu>

	* configure.in : Remove shadow passwords check because nothing in
 	libpty cares about the result; remove use of libkrb5, libkrb4,
 	libkadm; Check for _getpty

	* getpty.c (pty_getpty): Support _getpty for Irix; Irix has
 	/dev/ptmx, but it doesn't work correctly at all.  Also, Irix,
 	tends to create device nodes on the fly.

	* pty-int.h: No need to include sys/socket.h

Sat Feb 24 21:34:58 1996  Theodore Y. Ts'o  <tytso@dcl>

	* vhangup.c (ptyint_vhangup): Don't do call vhangup() if system
		doesn't have it.

Sat Jan 27 01:13:34 1996  Mark Eichin  <eichin@cygnus.com>

	* void_assoc.c (ptyint_void_association): if we don't have
	TIOCNOTTY (HP/UX 9 for example) don't try to use it.

Fri Jan 26 00:26:37 1996  Sam Hartman  <hartmans@tertius.mit.edu>

	* cleanup.c (pty_cleanup): Update utmp only if update_utmp is true.

Tue Jan 16 13:52:22 1996  Sam Hartman  <hartmans@tertius.mit.edu>

	* void_assoc.c (ptyint_void_association): Move setsid call from
        open_ctty to void_association.

	* logwtmp.c (pty_logwtmp): Pass user argument to update_wtmp.

	* update_utmp.c (update_utmp): Implement PTY_UTMP_USERNAME_VALID flag

Mon Jan 15 15:48:37 1996  Sam Hartman  (hartmans@justforfun)

	* cleanup.c: Change to indiciate utmp user name is valid.

	* 

Mon Jan 15 15:21:16 1996  Sam Hartman  <hartmans@tertius.mit.edu>

	* update_utmp.c (pty_update_utmp): Add flags field; use ttyslot
        only if reasonable.

Fri Jan 12 16:33:37 1996  Sam Hartman  <hartmans@infocalypse>

	* open_slave.c (pty_open_slave): Don't use fchmod or fchown; they
 	don't buy much security unless /dev is world-writable and may
 	prevent Solaris lossage.

Thu Dec 21 00:12:58 1995  Sam Hartman  <hartmans@portnoy>

	* open_slave.c (pty_open_slave): Open with no delay.


Wed Jan 10 22:20:04 1996  Theodore Y. Ts'o  <tytso@dcl>

	* open_slave.c (pty_open_slave): Added hack by Doug Engert to get
		util/pty to work under Solaris.  We should double check to
		make sure this is a correct fix.


Sun Nov 12 12:44:33 1995  Sam Hartman  <hartmans@tertius.mit.edu>

	* open_ctty.c (pty_open_ctty): Remove redundant Ultrix calls to setpgrp()

Sun Oct 22 03:48:37 1995  Sam Hartman  <hartmans@tertius.mit.edu>

	* update_wtmp.c (ptyint_update_wtmp): Add comments explaining why ifdefs are right.

Sun Oct 22 01:20:52 1995  Sam Hartman  <hartmans@infocalypse>

	* update_wtmp.c (ptyint_update_wtmp): Try utx not uts.

Mon Oct 16 17:41:45 1995  Sam Hartman  <hartmans@tertius.mit.edu>



	* update_wtmp.c (ptyint_update_wtmp): Update to take host name, so
        we can get the full host name if it is chopped in utmp.
	* update_wtmp.c (ptyint_update_wtmp):  Insert fallback path for Sunos and others, return defined value.




	* update_utmp.c (pty_update_utmp): Incorperate utmpx handling patch from ramus@nersc.gov to deal with support for longer hostanmes in utmpx.


*update_utmp.c: Add return statement and fallback path for Sunos.

Sat Oct 14 20:49:40 1995  Sam Hartman  <hartmans@tertius.mit.edu>
Fri Aug 11 17:49:36 1995  Samuel D Hartman  (hartmans@vorlon)


Fri Sep 29 14:18:03 1995  Theodore Y. Ts'o  <tytso@dcl>
	* update_wtmp.c (ptyint_update_wtmp): If EMPTY not defined as a
        utmp type, use DEAD_PROCESS.



	* configure.in:
	* Makefile.in: Use the SubdirLibraryRule defined in aclocal.m4 to
		create the DONE file (and to properly clean it up).

Mon Sep 25 16:42:36 1995  Theodore Y. Ts'o  <tytso@dcl>

	* Makefile.in: Removed "foo:: foo-$(WHAT)" lines from the
		Makefile. 

Thu Sep  7 19:13:05 1995  Mark Eichin  <eichin@cygnus.com>

	* update_utmp.c: ultimately fall back to /etc/utmp for UTMP_FILE,
	if it is still missing after all previous efforts.
	* update_wtmp.c: /usr/adm/wtmp for WTMP_FILE likewise.

Thu Aug 24 18:40:48 1995  Theodore Y. Ts'o  <tytso@dcl>

	* .Sanitize: Update file list

Tue Aug 15 21:42:16 1995    <tytso@rsts-11.mit.edu>

	* update_wtmp.c (ptyint_update_wtmp): If EMPTY is not defined,
		then set ut.ut_type to 0 instead.



Fri Aug 11 15:49:30 1995  Sam Hartman  <hartmans@tertius.mit.edu>

	* Makefile.in (CFILES): Rename initialize_slave.c to init_slave.c
        so it isn't truncated in libpty.a.

Fri Aug 11 01:12:03 1995  Sam Hartman  <hartmans@infocalypse>

	* initialize_slave.c (pty_initialize_slave): You really do need to
        push and pop the streams on a Sun. 

Fri Aug 11 00:49:23 1995  Sam Hartman  <hartmans@dragons-lair.MIT.EDU>

	* configure.in (ac_cv_func_setsid): Pretend that Ultrix doesn't
        have setsid, because if it does make the call then the pty never
        becomes controlling tty.

Thu Aug 10 09:47:07 1995  Sam Hartman  <hartmans@dragons-lair.MIT.EDU>

	* open_ctty.c (pty_open_ctty): Move setpgrp() after void_assoc call

Wed Aug  9 00:16:40 1995  Sam Hartman  <hartmans@tertius.mit.edu>

	* pty-int.h (VHANG_first): Change defines so VHANG_FIRST doesn't
        get defined under Ultrix because Ultrix can only establish
        controlling terminal once per process and we need to get
        controlling terminal again after vhangup().

	* getpty.c (pty_getpty): Use the right test for slave buffer length.

Tue Aug  8 22:20:33 1995  Tom Yu  <tlyu@lothlorien.MIT.EDU>

	* update_utmp.c (UTMP_FILE): _PATH_UTMP under NetBSD, not
		_UTMP_PATH; also fix typo (missing '&' on reference to
		ent)

Tue Aug  8 20:47:01 1995  Tom Yu  <tlyu@dragons-lair.MIT.EDU>

	* update_utmp.c (pty_update_utmp): change #ifdef NO_UT_PID to
		#ifndef

Tue Aug  8 09:13:50 1995  Sam Hartman  <hartmans@pao.mit.edu>

	* open_slave.c (pty_open_slave): Dissociate from controlling
        terminal before calling revoke.
	(pty_open_slave): Don't ask for a controlling terminal unless we need it.

Tue Aug  8 20:32:08 1995  Tom Yu  <tlyu@dragons-lair.MIT.EDU>

	* update_utmp.c: flush preprocessor directive to left margin.
	* pty_err.et: Fix typo in error description.

	* cleanup.c (pty_cleanup): Don't change slave before revoking it.  Also return a value all the time, not just on systems without revoke.


	* update_utmp.c (pty_update_utmp): Move #ifdef back to column 1.

Mon Aug  7 17:41:39 1995  Sam Hartman  <hartmans@tertius.mit.edu>

	* cleanup.c (pty_cleanup): Call pty_update_utmp using new interface.

	* update_utmp.c logwtmp.c : Call ptyint_update_wtmp not pty_update_wtmp.

	* cleanup.c (pty_cleanup): We can't use pid_t because we need to
        use something in libpty.h and we can't wait for pid_t to be
        defined there because we may not have configure.

	* update_wtmp.c (pty_update_wtmp): Rename to ptyint_update_wtmp.

	* update_utmp.c (pty_update_utmp): Change interface so it doesn't take a struct utmp.

	* libpty.h: Remove pty_update_wtmp as it's becoming  an internal interface.

Sat Aug  5 01:00:35 1995  Ezra Peisach  <epeisach@kangaroo.mit.edu>

	* open_slave.c (pty_open_slave): pty_open_ctty returns != 0 on
		error, not less than.

Fri Aug  4 13:59:11 1995  Theodore Y. Ts'o  <tytso@dcl>

	* libpty.h (pty_cleanup): Fix argument type of pid to patch that
		used in the C file.  Include <utmpx.h> if present.  Only
		include <utmp.h> if it is present.
	
	* configure.in: Check for utmp.h and utmpx.h

Fri Aug  4 00:59:20 1995  Tom Yu  <tlyu@dragons-lair.MIT.EDU>

	* Makefile.in: use libupdate so to not get multiple copies of
		object files upon rebuild.

	* vhangup.c (ptyint_vhangup): Make sure preprocessor directives
		are at left margin.

	* open_slave.c (pty_open_slave): Make sure preprocessor directives
		are at left margin.

	* open_ctty.c (pty_open_ctty): Make sure preprocessor directives
		are at left margin.

	* cleanup.c (pty_cleanup): Add missing declarations for retval and
		fd.  Also, align preprocessor directives with left margin.

Thu Aug  3 15:04:34 1995  Sam Hartman  <hartmans@tertius.mit.edu>

	* configure.in: Check for vhangup and killpg.

	* cleanup.c (pty_cleanup): Kill the process group associated with
        the pty if using revoke.  This won't always work, but will at
        least attempt to remove processes associated with the pty.

Wed Aug  2 11:59:19 1995  Sam Hartman  <hartmans@tertius.mit.edu>

	* init.c (pty_init): New file to handle initialization--currently only error tables.

	* getpty.c (pty_getpty): Reverse sense of logic tests so they work.  

Tue Aug  1 08:20:06 1995  Sam Hartman  <hartmans@tertius.mit.edu>

	* cleanup.c (pty_cleanup): Allow pid to be zero (unknown).

	* pty-int.h: Define VHANG_FIRST and VHANG_LAST based on presence
        of vhangup.

	* pty_err.et: Define PTY_GETPTY_SLAVE_TOOLONG

	* getpty.c (pty_getpty): Close slave side if we call openpty.

	(pty_getpty): Take length parameter; return error if it isn't big enough.



Tue Aug  1 12:06:14 1995  Ezra Peisach  <epeisach@kangaroo.mit.edu>

	* open_ctty.c (pty_open_ctty): Fixed typo TIOCSTTY to TIOCSCTTY.


